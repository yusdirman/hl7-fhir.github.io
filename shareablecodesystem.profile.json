{
  "resourceType": "StructureDefinition",
  "id": "shareablecodesystem",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">to do</div>"
  },
  "url": "http://hl7.org/fhir/StructureDefinition/shareablecodesystem",
  "name": "Shareable CodeSystem",
  "status": "draft",
  "publisher": "HL7",
  "date": "2016-06-06T20:14:04+00:00",
  "description": "Enforces the minimum information set for the value set metadata required by HL7 and other organisations that share and publish value sets",
  "fhirVersion": "1.4.0",
  "mapping": [
    {
      "identity": "rim",
      "uri": "http://hl7.org/v3",
      "name": "RIM"
    }
  ],
  "kind": "resource",
  "abstract": false,
  "baseType": "CodeSystem",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/CodeSystem",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "path": "CodeSystem",
        "name": "ShareableCodeSystem",
        "short": "A set of codes drawn from one or more code systems",
        "definition": "A code system resource specifies a set of codes drawn from one or more code systems.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeSystem"
          }
        ],
        "constraint": [
          {
            "key": "csd-1",
            "severity": "error",
            "human": "Within a code system definition, all the codes SHALL be unique",
            "expression": "descendents().code.isDistinct()",
            "xpath": "count(distinct-values(descendant::f:concept/f:code/@value))=count(descendant::f:concept)"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance"
          },
          {
            "identity": "w5",
            "map": "conformance.terminology"
          }
        ]
      },
      {
        "path": "CodeSystem.id",
        "short": "Logical id of this artifact",
        "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
        "comments": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation. Bundles always have an id, though it is usually a generated UUID.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.meta",
        "short": "Metadata about the resource",
        "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.meta",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Meta"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.implicitRules",
        "short": "A set of rules under which this content was created",
        "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
        "comments": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element as much as possible.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.implicitRules",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isModifier": true,
        "isSummary": true
      },
      {
        "path": "CodeSystem.language",
        "short": "Language of the resource content",
        "definition": "The base language in which the resource is written.",
        "comments": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource  Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.language",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "A human language.",
          "valueSetUri": "http://tools.ietf.org/html/bcp47"
        }
      },
      {
        "path": "CodeSystem.text",
        "short": "Text summary of the resource, for human interpretation",
        "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "comments": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative.",
        "alias": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.text",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Narrative"
          }
        ],
        "condition": [
          "dom-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Act.text?"
          }
        ]
      },
      {
        "path": "CodeSystem.contained",
        "short": "Contained, inline Resources",
        "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
        "comments": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
        "alias": [
          "inline resources",
          "anonymous resources",
          "contained resources"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.contained",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Resource"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.url",
        "short": "Globally unique logical identifier for  code system (Coding.system)",
        "definition": "An absolute URL that is used to identify this code system when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this code system is (or will be) published. This is used in [Coding]{datatypes.html#Coding}.system.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.url",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.url"
          },
          {
            "identity": "w5",
            "map": "id"
          }
        ]
      },
      {
        "path": "CodeSystem.identifier",
        "short": "Additional identifier for the code system (e.g. HL7 v2 / CDA)",
        "definition": "Formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "comments": "Typically, this is used for values that can go in an HL7 v3 II data type.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.identifier",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "define.xml2.0",
            "map": "Identifier part"
          },
          {
            "identity": "w5",
            "map": "id"
          }
        ]
      },
      {
        "path": "CodeSystem.version",
        "short": "Logical identifier for this version (Coding.version)",
        "definition": "Used to identify this version of the code system when it is referenced in a specification, model, design or instance (e.g. Coding.version). This is an arbitrary value managed by the profile author manually and the value should be a timestamp. This is used in [Coding]{datatypes.html#Coding}.version.",
        "comments": "There may be multiple resource versions of the code system that have the same identifier.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.version",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.version"
          },
          {
            "identity": "w5",
            "map": "id.version"
          }
        ]
      },
      {
        "path": "CodeSystem.name",
        "short": "Informal name for this code system",
        "definition": "A free text natural language name describing the code system.",
        "comments": "The name is not expected to be unique. A name should be provided unless the code system is a contained resource (e.g. an anonymous code system in a profile). Most registries will require a name.",
        "requirements": "Support human navigation.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.name"
          }
        ]
      },
      {
        "path": "CodeSystem.status",
        "short": "draft | active | retired",
        "definition": "The status of the code system.",
        "comments": "Allows filtering of code system instances that are appropriate (or not) for use.",
        "requirements": "Identify when/if the code system should be used.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.status",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The lifecycle status of a Value Set or Concept Map.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/conformance-resource-status"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.status"
          },
          {
            "identity": "w5",
            "map": "status"
          }
        ]
      },
      {
        "path": "CodeSystem.experimental",
        "short": "If for testing purposes, not real usage",
        "definition": "This CodeSystem was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
        "comments": "Allows filtering of code systems that are appropriate for use vs. not.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.experimental",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "w5",
            "map": "class"
          }
        ]
      },
      {
        "path": "CodeSystem.publisher",
        "short": "Name of the publisher (organization or individual)",
        "definition": "The name of the individual or organization that published the code system.",
        "comments": "Usually an organization, but may be an individual. This item SHOULD be populated unless the information is available from context.",
        "requirements": "Helps establish the \"authority/credibility\" of the code system.  May also allow for contact.",
        "alias": [
          "steward"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.publisher",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "w5",
            "map": "who.witness"
          }
        ]
      },
      {
        "path": "CodeSystem.contact",
        "short": "Contact details of the publisher",
        "definition": "Contacts to assist a user in finding and communicating with the publisher.",
        "comments": "May be a web site, an email address, a telephone number, etc.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.contact",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.contact.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.contact.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.contact.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.contact.name",
        "short": "Name of an individual to contact",
        "definition": "The name of an individual to contact regarding the code system.",
        "comments": "If there is no named individual, the telecom is for the organization as a whole.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.contact.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.contact.telecom",
        "short": "Contact details for individual or publisher",
        "definition": "Contact details for individual (if a name was provided) or the publisher.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.contact.telecom",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "ContactPoint"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.date",
        "short": "Date for given status",
        "definition": "The date that the code system status was last changed. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the implementation guide changes (e.g. the 'content logical definition').",
        "comments": "Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the code system. Additional specific dates may be added as extensions.",
        "requirements": "Need to know when a code system was first legal for use or became withdrawn or replaced.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.date",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "dateTime"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.date"
          },
          {
            "identity": "w5",
            "map": "when.recorded"
          }
        ]
      },
      {
        "path": "CodeSystem.description",
        "short": "Human language description of the code system",
        "definition": "A free text natural language description of the use of the code system - reason for definition, \"the semantic space\" to be included in the code system, conditions of use, etc. The description may include a list of expected usages for the code system and can also describe the approach taken to build the code system.",
        "comments": "The description is not intended to describe the semantics of the Code System - there are no intrinsic semantics separate from the codes contained in its expansion. The description should capture its intended use, which is needed for ensuring integrity for its use in models across future changes. A description should be provided unless the code system is a contained resource (e.g. an anonymous code system in a profile). Most registries will require a description.",
        "requirements": "Human understandability.",
        "alias": [
          "Scope",
          "Purpose",
          "scope"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.useContext",
        "short": "Content intends to support these contexts",
        "definition": "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of code system definitions.",
        "requirements": "Assist in searching for appropriate content.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.useContext",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "extensible",
          "description": "Indicates the countries, regions, disciplines and other aspects of use within which this artifact is targeted for use.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/use-context"
          }
        },
        "mapping": [
          {
            "identity": "define.xml2.0",
            "map": "COMPONENT, PROPERTY, TIME_ASPCT, SYSTEM, SCALE_TYP, METHOD_TYP, CLASS, CLASSTYPE, ORDER_OBS, DOCUMENT_SECTION, HL7_ATTACHMENT_STRUCTURE"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.useContext"
          }
        ]
      },
      {
        "path": "CodeSystem.requirements",
        "short": "Why needed",
        "definition": "Explains why this code system is needed and why it has been constrained as it has.",
        "comments": "This element does not describe the usage of the code system (that is done in comments), rather it's for traceability of ''why'' the element is either needed or ''why'' the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.requirements",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.copyright",
        "short": "Use and/or publishing restrictions",
        "definition": "A copyright statement relating to the code system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the code system.",
        "comments": "Frequently, the copyright differs between the code system and the codes that are included. The copyright statement should clearly differentiate between these when required.",
        "alias": [
          "License",
          "Restrictions"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.copyright",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.caseSensitive",
        "short": "If code comparison is case sensitive",
        "definition": "If code comparison is case sensitive when codes within this system are compared to each other.",
        "comments": "If this value is missing, then it is not specified whether a code system is case sensitive or not. When the rule is not known, Postel's law should be followed: produce codes with the correct case, and accept codes in any case. This element is primarily provided to support validation software.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.caseSensitive",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.valueSet",
        "short": "Canonical URL for value set with entire code system",
        "definition": "Canonical URL of value set that contains the entire code system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.valueSet",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.compositional",
        "short": "If code system defines a post-composition grammar",
        "definition": "True If code system defines a post-composition grammar.",
        "comments": "Note that the code system resource does not define what the compositional grammar is, only whether or not there is one.",
        "alias": [
          "grammar"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.compositional",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.versionNeeded",
        "short": "If definitions are not stable",
        "definition": "This flag is used to signify that the code system has not (or does not) maintain the definitions, and a version must be specified when referencing this code system.",
        "comments": "Best practice is that code systems do not redefine concepts, or that if concepts are redefined, a new code system definition is created. But this is not always possible, so some code systems may be defined as 'versionNeeded'.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.versionNeeded",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.content",
        "short": "not-present | examplar | fragment | complete",
        "definition": "How much of the content of the code system - the concepts and codes it defines - are represented in this resource.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.content",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "How much of the content of the code system - the concepts and codes it defines - are represented in a code system resource",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/codesystem-content-mode"
          }
        }
      },
      {
        "path": "CodeSystem.count",
        "short": "Total concepts in the code system",
        "definition": "The total number of concepts defined by the code system. Where the code system has a compositional grammar, the count refers to the number of base (primitive) concepts.",
        "comments": "The count of concepts defined in this resource cannot be more than this value, but may be less for several reasons - see the content value.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.count",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "unsignedInt"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.filter",
        "short": "Filter that can be used in a value set",
        "definition": "A filter that can be used in a value set compose statement when selecting concepts using a filter.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.filter",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.filter.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.filter.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.filter.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.filter.code",
        "short": "Code that identifies the filter",
        "definition": "The code that identifies thise filter when it is used in the instance.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.filter.code",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.filter.description",
        "short": "How or why the filter is used",
        "definition": "A description of how or why the filter is used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.filter.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.filter.operator",
        "short": "Operators that can be used with filter",
        "definition": "A list of operators that can be used with the filter.",
        "min": 1,
        "max": "*",
        "base": {
          "path": "CodeSystem.filter.operator",
          "min": 1,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The kind of operation to perform as a part of a property based filter.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/filter-operator"
          }
        }
      },
      {
        "path": "CodeSystem.filter.value",
        "short": "What to use for the value",
        "definition": "A description of what the value for the filter should be.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.filter.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.property",
        "short": "Additional information supplied about each concept",
        "definition": "A property defines an additional slot through which additional information can be provided about a concept.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.property",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.property.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.property.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.property.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.property.code",
        "short": "Identifies the property on the concepts, and when referred to in operations",
        "definition": "A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.property.code",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.property.uri",
        "short": "Formal identifier for the property",
        "definition": "Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.property.uri",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.property.description",
        "short": "Why the property is defined, and/or what it conveys",
        "definition": "A description of the property- why it is defined, and how it's value might be used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.property.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "CodeSystem.property.type",
        "short": "code | Coding | string | integer | boolean | dateTime",
        "definition": "The type of the property value. Properties of type \"code\" contain a code defined by the code system (e.g. a reference to anotherr defined concept).",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.property.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The type of a property value",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/concept-property-type"
          }
        }
      },
      {
        "id": "concept",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
            "valueString": "ConceptDefinition"
          }
        ],
        "path": "CodeSystem.concept",
        "short": "Concepts in the code system",
        "definition": "Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meaning of the hierarchical relationships are.",
        "comments": "If this is empty, it means that the code system resource does not represent the content of the code system.",
        "min": 1,
        "max": "*",
        "base": {
          "path": "CodeSystem.concept",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.code",
        "short": "Code that identifies concept",
        "definition": "A code - a text symbol - that uniquely identifies the concept within the code system.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.code",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.display",
        "short": "Text to display to the user",
        "definition": "A human readable string that is the recommended default way to present this concept to a user.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.definition",
        "short": "Formal definition",
        "definition": "The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.definition",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.designation",
        "short": "Additional representations for the concept",
        "definition": "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.",
        "requirements": "Many concept definition systems support multiple representations, in multiple languages, and for multiple purposes.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.concept.designation",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.designation.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.designation.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.designation.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.designation.language",
        "short": "Human language of the designation",
        "definition": "The language this designation is defined for.",
        "comments": "In the absence of a language, the resource language applies.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.designation.language",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "A human language.",
          "valueSetUri": "http://tools.ietf.org/html/bcp47"
        }
      },
      {
        "path": "CodeSystem.concept.designation.use",
        "short": "Details how this designation would be used",
        "definition": "A code that details how this designation would be used.",
        "comments": "If no use is provided, the designation can be assumed to be suitable for general display to a human user.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.designation.use",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "strength": "extensible",
          "description": "Details of how a designation would be used.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/designation-use"
          }
        }
      },
      {
        "path": "CodeSystem.concept.designation.value",
        "short": "The text value for this designation",
        "definition": "The text value for this designation.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.designation.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.property",
        "short": "Property value for the concept",
        "definition": "A property value for this concept.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.concept.property",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.property.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.property.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.property.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.property.code",
        "short": "Reference to CodeSystem.property.code",
        "definition": "A code that is a reference to CodeSystem.property.code.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.property.code",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.property.value[x]",
        "short": "Value of the property for this concept",
        "definition": "The value of this property.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "CodeSystem.concept.property.value[x]",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          },
          {
            "code": "Coding"
          },
          {
            "code": "string"
          },
          {
            "code": "integer"
          },
          {
            "code": "boolean"
          },
          {
            "code": "dateTime"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.concept",
        "short": "Child Concepts (is-a/contains/categorizes)",
        "definition": "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) and can only be determined by examining the definitions of the concepts.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeSystem.concept.concept",
          "min": 0,
          "max": "*"
        },
        "contentReference": "#concept"
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "CodeSystem",
        "name": "ShareableCodeSystem",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "CodeSystem"
          }
        ]
      },
      {
        "path": "CodeSystem.immutable",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "boolean"
          }
        ]
      },
      {
        "path": "CodeSystem.url",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "uri"
          }
        ]
      },
      {
        "path": "CodeSystem.version",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.name",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.status",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.experimental",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "boolean"
          }
        ]
      },
      {
        "path": "CodeSystem.publisher",
        "alias": [
          "steward"
        ],
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.description",
        "alias": [
          "scope"
        ],
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "CodeSystem.caseSensitive",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "boolean"
          }
        ]
      },
      {
        "id": "concept",
        "path": "CodeSystem.concept",
        "min": 1,
        "max": "*"
      },
      {
        "path": "CodeSystem.concept.abstract",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "boolean"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.code",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.display",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.definition",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "CodeSystem.concept.concept",
        "min": 0,
        "max": "*",
        "contentReference": "#concept"
      }
    ]
  }
}