{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://hl7.org/fhir/json-schema/ActionDefinition",
  "$ref": "#/definitions/ActionDefinition",
  "description": "see http://hl7.org/fhir/json.html#schema for information about the FHIR Json Schemas",
  "definitions": {
    "ActionDefinition": {
      "allOf": [
        {
          "$ref": "Type.schema.json/definitions/Type"
        },
        {
          "description": "The definition of an action to be performed. Some aspects of the definition are specified statically, and some aspects can be specified dynamically by referencing logic defined in a library.",
          "properties": {
            "actionIdentifier": {
              "description": "A unique identifier for the action. The identifier SHALL be unique within the container in which it appears, and MAY be universally unique.",
              "$ref": "Identifier.schema.json/definitions/Identifier"
            },
            "label": {
              "description": "A user-visible label for the action.",
              "type": "string"
            },
            "label_": {
              "description": "Extensions for label",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "title": {
              "description": "The title of the action displayed to a user.",
              "type": "string"
            },
            "title_": {
              "description": "Extensions for title",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "A short description of the action used to provide a summary to display to the user.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "textEquivalent": {
              "description": "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that may not be capable of interpreting it dynamically.",
              "type": "string"
            },
            "textEquivalent_": {
              "description": "Extensions for textEquivalent",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "concept": {
              "description": "The concept represented by this action or its sub-actions.",
              "type": "array",
              "items": {
                "$ref": "CodeableConcept.schema.json/definitions/CodeableConcept"
              }
            },
            "supportingEvidence": {
              "description": "The evidence grade and the sources of evidence for this action.",
              "type": "array",
              "items": {
                "$ref": "Attachment.schema.json/definitions/Attachment"
              }
            },
            "documentation": {
              "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
              "type": "array",
              "items": {
                "$ref": "Attachment.schema.json/definitions/Attachment"
              }
            },
            "relatedAction": {
              "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".",
              "$ref": "#/definitions/ActionDefinition.RelatedAction"
            },
            "participantType": {
              "description": "The type of participant in the action.",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
              }
            },
            "participantType_": {
              "description": "Extensions for participantType",
              "items": {
                "$ref": "Element.schema.json/definitions/Element"
              }
            },
            "type": {
              "description": "The type of action to perform (create, update, remove).",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "type_": {
              "description": "Extensions for type",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "behavior": {
              "description": "A behavior associated with the action. Behaviors define how the action is to be presented and/or executed within the receiving environment.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionDefinition.Behavior"
              }
            },
            "resource": {
              "description": "The resource that is the target of the action (e.g. CommunicationRequest). The resource described here defines any aspects of the action that can be specified statically (i.e. are known at the time of definition).",
              "$ref": "Reference.schema.json/definitions/Reference"
            },
            "customization": {
              "description": "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient\u0027s weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionDefinition.Customization"
              }
            },
            "action": {
              "description": "Sub actions that are contained within the action. The behavior of this action determines the functionality of the sub-actions. For example, a selection behavior of at-most-one indicates that of the sub-actions, at most one may be chosen as part of realizing the action definition.",
              "type": "array",
              "items": {
                "$ref": "ActionDefinition.schema.json/definitions/ActionDefinition"
              }
            }
          }
        }
      ]
    },
    "ActionDefinition.RelatedAction": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The definition of an action to be performed. Some aspects of the definition are specified statically, and some aspects can be specified dynamically by referencing logic defined in a library.",
          "properties": {
            "actionIdentifier": {
              "description": "The unique identifier of the related action.",
              "$ref": "Identifier.schema.json/definitions/Identifier"
            },
            "relationship": {
              "description": "The relationship of this action to the related action.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "relationship_": {
              "description": "Extensions for relationship",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "offsetDuration": {
              "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
              "$ref": "Duration.schema.json/definitions/Duration"
            },
            "offsetRange": {
              "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
              "$ref": "Range.schema.json/definitions/Range"
            },
            "anchor": {
              "description": "An optional indicator for how the relationship is anchored to the related action. For example \"before the start\" or \"before the end\" of the related action.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "anchor_": {
              "description": "Extensions for anchor",
              "$ref": "Element.schema.json/definitions/Element"
            }
          },
          "required": [
            "actionIdentifier"
          ]
        }
      ]
    },
    "ActionDefinition.Behavior": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The definition of an action to be performed. Some aspects of the definition are specified statically, and some aspects can be specified dynamically by referencing logic defined in a library.",
          "properties": {
            "type": {
              "description": "The type of the behavior to be described, such as grouping, visual, or selection behaviors.",
              "$ref": "Coding.schema.json/definitions/Coding"
            },
            "value": {
              "description": "The specific behavior. The code used here is determined by the type of behavior being described. For example, the grouping behavior uses the grouping-behavior-type valueset.",
              "$ref": "Coding.schema.json/definitions/Coding"
            }
          },
          "required": [
            "type",
            "value"
          ]
        }
      ]
    },
    "ActionDefinition.Customization": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The definition of an action to be performed. Some aspects of the definition are specified statically, and some aspects can be specified dynamically by referencing logic defined in a library.",
          "properties": {
            "path": {
              "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression.",
              "type": "string"
            },
            "path_": {
              "description": "Extensions for path",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "expression": {
              "description": "An expression specifying the value of the customized element.",
              "type": "string"
            },
            "expression_": {
              "description": "Extensions for expression",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    }
  }
}