{
  "resourceType": "StructureDefinition",
  "id": "OpaqueData",
  "url": "{http://www.omg.org/spec/CTS2/1.1/Core}OpaqueData",
  "name": "OpaqueData",
  "display": "CTS2.OpaqueData",
  "status": "draft",
  "publisher": "Generated by Xsd-to-FHIR",
  "contact": [
    {
      "name": "Visit the Github repository for more information",
      "telecom": [
        {
          "system": "other",
          "value": "https://github.com/cts2/CTS2-to-FHIR"
        }
      ]
    }
  ],
  "date": "2016-02-08T19:11:02-07:00",
  "description": "Opaque data is the equivalent of an ASN.1 External Type ISO/IEC 8824-1:2008 Information technology -- Abstract Syntax Notation One (ASN.1): Specification of basic notion. Clause 37 - Notation for the\n\t\t\t\t\t\texternal type or the XML Schema anyType. An OpaqueData instance may represent text with an optional spoken or written language code or a\n\t\t\t\tformal structure such as embedded HTML, XML or MIME encoded data. When a formal structure is included, its type should be specified in the format attribute and, when the type is an XML variant, the corresponding\n\t\t\t\tschema (or DTD) should be included in the schema parameter.The OpaqueData data type must be encoded in such a way that the content can be represented by a character string. Binary data is not permitted,although\n\t\t\t\thyperlinks to binary data are.",
  "fhirVersion": "1.4.0",
  "kind": "logical",
  "abstract": false,
  "snapshot": {
    "element": [
      {
        "path": "OpaqueData",
        "short": "OpaqueData",
        "definition": "Opaque data is the equivalent of an ASN.1 External Type ISO/IEC 8824-1:2008 Information technology -- Abstract Syntax Notation One (ASN.1): Specification of basic notion. Clause 37 - Notation for the\n\t\t\t\t\t\texternal type or the XML Schema anyType. An OpaqueData instance may represent text with an optional spoken or written language code or a\n\t\t\t\tformal structure such as embedded HTML, XML or MIME encoded data. When a formal structure is included, its type should be specified in the format attribute and, when the type is an XML variant, the corresponding\n\t\t\t\tschema (or DTD) should be included in the schema parameter.The OpaqueData data type must be encoded in such a way that the content can be represented by a character string. Binary data is not permitted,although\n\t\t\t\thyperlinks to binary data are.",
        "min": 0,
        "max": "*"
      },
      {
        "path": "OpaqueData.value",
        "name": "value",
        "short": "the instance value",
        "definition": "the instance value. Note that instance value should be encoded in such a way that it allows embedded structures. As an example, in XML Schema, this encoding should be to xs:anyType or an\n\t\t\t\t\t\tequivalent.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "tsAnyType"
          }
        ]
      },
      {
        "path": "OpaqueData.format",
        "name": "format",
        "short": "the format or encoding for value",
        "definition": "the format or encoding for value. This is typically recorded as the URI of a Mime Type.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "FormatReference"
          }
        ]
      },
      {
        "path": "OpaqueData.language",
        "name": "language",
        "short": "a reference to the written or spoken language used in value",
        "definition": "a reference to the written or spoken language used in value.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "LanguageReference"
          }
        ]
      },
      {
        "path": "OpaqueData.schema",
        "name": "schema",
        "short": "if the format of the document involves an XML encoding, this contains the URI of a document that carries the corresponding XML Schema or DTD",
        "definition": "if the format of the document involves an XML encoding, this contains the URI of a document that carries the corresponding XML Schema or DTD.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "DocumentURI"
          }
        ]
      }
    ]
  }
}