{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://hl7.org/fhir/json-schema/CodeSystem",
  "$ref": "#/definitions/CodeSystem",
  "description": "see http://hl7.org/fhir/json.html#schema for information about the FHIR Json Schemas",
  "definitions": {
    "CodeSystem": {
      "allOf": [
        {
          "$ref": "DomainResource.schema.json/definitions/DomainResource"
        },
        {
          "description": "A code system resource specifies a set of codes drawn from one or more code systems.",
          "properties": {
            "resourceType": {
              "description": "This is a CodeSystem resource",
              "type": "string",
              "enum": [
                "CodeSystem"
              ]
            },
            "url": {
              "description": "An absolute URL that is used to identify this code system when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this code system is (or will be) published. This is used in [Coding]{datatypes.html#Coding}.system.",
              "type": "string"
            },
            "url_": {
              "description": "Extensions for url",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "identifier": {
              "description": "Formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.",
              "$ref": "Identifier.schema.json/definitions/Identifier"
            },
            "version": {
              "description": "Used to identify this version of the code system when it is referenced in a specification, model, design or instance (e.g. Coding.version). This is an arbitrary value managed by the profile author manually and the value should be a timestamp. This is used in [Coding]{datatypes.html#Coding}.version.",
              "type": "string"
            },
            "version_": {
              "description": "Extensions for version",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "name": {
              "description": "A free text natural language name describing the code system.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "status": {
              "description": "The status of the code system.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "status_": {
              "description": "Extensions for status",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "experimental": {
              "description": "This CodeSystem was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
              "type": "true | false"
            },
            "experimental_": {
              "description": "Extensions for experimental",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "publisher": {
              "description": "The name of the individual or organization that published the code system.",
              "type": "string"
            },
            "publisher_": {
              "description": "Extensions for publisher",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "contact": {
              "description": "Contacts to assist a user in finding and communicating with the publisher.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeSystem.Contact"
              }
            },
            "date": {
              "description": "The date that the code system status was last changed. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the implementation guide changes (e.g. the \u0027content logical definition\u0027).",
              "type": "string",
              "pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            },
            "date_": {
              "description": "Extensions for date",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "A free text natural language description of the use of the code system - reason for definition, \"the semantic space\" to be included in the code system, conditions of use, etc. The description may include a list of expected usages for the code system and can also describe the approach taken to build the code system.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "useContext": {
              "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of code system definitions.",
              "type": "array",
              "items": {
                "$ref": "CodeableConcept.schema.json/definitions/CodeableConcept"
              }
            },
            "requirements": {
              "description": "Explains why this code system is needed and why it has been constrained as it has.",
              "type": "string"
            },
            "requirements_": {
              "description": "Extensions for requirements",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "copyright": {
              "description": "A copyright statement relating to the code system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the code system.",
              "type": "string"
            },
            "copyright_": {
              "description": "Extensions for copyright",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "caseSensitive": {
              "description": "If code comparison is case sensitive when codes within this system are compared to each other.",
              "type": "true | false"
            },
            "caseSensitive_": {
              "description": "Extensions for caseSensitive",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueSet": {
              "description": "Canonical URL of value set that contains the entire code system.",
              "type": "string"
            },
            "valueSet_": {
              "description": "Extensions for valueSet",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "compositional": {
              "description": "True If code system defines a post-composition grammar.",
              "type": "true | false"
            },
            "compositional_": {
              "description": "Extensions for compositional",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "versionNeeded": {
              "description": "This flag is used to signify that the code system has not (or does not) maintain the definitions, and a version must be specified when referencing this code system.",
              "type": "true | false"
            },
            "versionNeeded_": {
              "description": "Extensions for versionNeeded",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "content": {
              "description": "How much of the content of the code system - the concepts and codes it defines - are represented in this resource.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "content_": {
              "description": "Extensions for content",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "count": {
              "description": "The total number of concepts defined by the code system. Where the code system has a compositional grammar, the count refers to the number of base (primitive) concepts.",
              "type": "number",
              "pattern": "[0]|([1-9][0-9]*)"
            },
            "count_": {
              "description": "Extensions for count",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "filter": {
              "description": "A filter that can be used in a value set compose statement when selecting concepts using a filter.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeSystem.Filter"
              }
            },
            "property": {
              "description": "A property defines an additional slot through which additional information can be provided about a concept.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeSystem.Property"
              }
            },
            "concept": {
              "description": "Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meaning of the hierarchical relationships are.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeSystem.Concept"
              }
            }
          },
          "required": [
            "resourceType"
          ]
        }
      ]
    },
    "CodeSystem.Contact": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "A code system resource specifies a set of codes drawn from one or more code systems.",
          "properties": {
            "name": {
              "description": "The name of an individual to contact regarding the code system.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "telecom": {
              "description": "Contact details for individual (if a name was provided) or the publisher.",
              "type": "array",
              "items": {
                "$ref": "ContactPoint.schema.json/definitions/ContactPoint"
              }
            }
          }
        }
      ]
    },
    "CodeSystem.Filter": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "A code system resource specifies a set of codes drawn from one or more code systems.",
          "properties": {
            "code": {
              "description": "The code that identifies thise filter when it is used in the instance.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "code_": {
              "description": "Extensions for code",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "A description of how or why the filter is used.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "operator": {
              "description": "A list of operators that can be used with the filter.",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
              }
            },
            "operator_": {
              "description": "Extensions for operator",
              "items": {
                "$ref": "Element.schema.json/definitions/Element"
              }
            },
            "value": {
              "description": "A description of what the value for the filter should be.",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "CodeSystem.Property": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "A code system resource specifies a set of codes drawn from one or more code systems.",
          "properties": {
            "code": {
              "description": "A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "code_": {
              "description": "Extensions for code",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "uri": {
              "description": "Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.",
              "type": "string"
            },
            "uri_": {
              "description": "Extensions for uri",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "A description of the property- why it is defined, and how it\u0027s value might be used.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "type": {
              "description": "The type of the property value. Properties of type \"code\" contain a code defined by the code system (e.g. a reference to anotherr defined concept).",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "type_": {
              "description": "Extensions for type",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "CodeSystem.Concept": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "A code system resource specifies a set of codes drawn from one or more code systems.",
          "properties": {
            "code": {
              "description": "A code - a text symbol - that uniquely identifies the concept within the code system.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "code_": {
              "description": "Extensions for code",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "display": {
              "description": "A human readable string that is the recommended default way to present this concept to a user.",
              "type": "string"
            },
            "display_": {
              "description": "Extensions for display",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "definition": {
              "description": "The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.",
              "type": "string"
            },
            "definition_": {
              "description": "Extensions for definition",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "designation": {
              "description": "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeSystem.Designation"
              }
            },
            "property": {
              "description": "A property value for this concept.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeSystem.Property1"
              }
            },
            "concept": {
              "description": "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) and can only be determined by examining the definitions of the concepts.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeSystem.Concept"
              }
            }
          }
        }
      ]
    },
    "CodeSystem.Designation": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "A code system resource specifies a set of codes drawn from one or more code systems.",
          "properties": {
            "language": {
              "description": "The language this designation is defined for.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "language_": {
              "description": "Extensions for language",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "use": {
              "description": "A code that details how this designation would be used.",
              "$ref": "Coding.schema.json/definitions/Coding"
            },
            "value": {
              "description": "The text value for this designation.",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "CodeSystem.Property1": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "A code system resource specifies a set of codes drawn from one or more code systems.",
          "properties": {
            "code": {
              "description": "A code that is a reference to CodeSystem.property.code.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "code_": {
              "description": "Extensions for code",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueCode": {
              "description": "The value of this property.",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*",
              "type": "string"
            },
            "valueCode_": {
              "description": "Extensions for valueCode",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueCoding": {
              "description": "The value of this property.",
              "$ref": "Coding.schema.json/definitions/Coding"
            },
            "valueString": {
              "description": "The value of this property.",
              "type": "string"
            },
            "valueString_": {
              "description": "Extensions for valueString",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueInteger": {
              "description": "The value of this property.",
              "pattern": "-?([0]|([1-9][0-9]*))",
              "type": "number"
            },
            "valueInteger_": {
              "description": "Extensions for valueInteger",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueBoolean": {
              "description": "The value of this property.",
              "type": "true | false"
            },
            "valueBoolean_": {
              "description": "Extensions for valueBoolean",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueDateTime": {
              "description": "The value of this property.",
              "pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
              "type": "string"
            },
            "valueDateTime_": {
              "description": "Extensions for valueDateTime",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    }
  }
}