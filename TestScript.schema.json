{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://hl7.org/fhir/json-schema/TestScript",
  "$ref": "#/definitions/TestScript",
  "description": "see http://hl7.org/fhir/json.html#schema for information about the FHIR Json Schemas",
  "definitions": {
    "TestScript": {
      "allOf": [
        {
          "$ref": "DomainResource.schema.json/definitions/DomainResource"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "resourceType": {
              "description": "This is a TestScript resource",
              "type": "string",
              "enum": [
                "TestScript"
              ]
            },
            "url": {
              "description": "An absolute URL that is used to identify this Test Script. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this Test Script is (or will be) published.",
              "type": "string"
            },
            "url_": {
              "description": "Extensions for url",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "version": {
              "description": "The identifier that is used to identify this version of the TestScript. This is an arbitrary value managed by the TestScript author manually.",
              "type": "string"
            },
            "version_": {
              "description": "Extensions for version",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "name": {
              "description": "A free text natural language name identifying the TestScript.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "status": {
              "description": "The status of the TestScript.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "status_": {
              "description": "Extensions for status",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "identifier": {
              "description": "Identifier for the TestScript assigned for external purposes outside the context of FHIR.",
              "$ref": "Identifier.schema.json/definitions/Identifier"
            },
            "experimental": {
              "description": "This TestScript was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
              "type": "true | false"
            },
            "experimental_": {
              "description": "Extensions for experimental",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "publisher": {
              "description": "The name of the individual or organization that published the Test Script.",
              "type": "string"
            },
            "publisher_": {
              "description": "Extensions for publisher",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "contact": {
              "description": "Contacts to assist a user in finding and communicating with the publisher.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Contact"
              }
            },
            "date": {
              "description": "The date this version of the test tcript was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the test cases change.",
              "type": "string",
              "pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            },
            "date_": {
              "description": "Extensions for date",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "A free text natural language description of the TestScript and its use.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "useContext": {
              "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of Test Scripts.",
              "type": "array",
              "items": {
                "$ref": "CodeableConcept.schema.json/definitions/CodeableConcept"
              }
            },
            "requirements": {
              "description": "Explains why this Test Script is needed and why it\u0027s been constrained as it has.",
              "type": "string"
            },
            "requirements_": {
              "description": "Extensions for requirements",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "copyright": {
              "description": "A copyright statement relating to the Test Script and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the details of the constraints and mappings.",
              "type": "string"
            },
            "copyright_": {
              "description": "Extensions for copyright",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "origin": {
              "description": "An abstract server used in operations within this test script in the origin element.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Origin"
              }
            },
            "destination": {
              "description": "An abstract server used in operations within this test script in the destination element.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Destination"
              }
            },
            "metadata": {
              "description": "The required capability must exist and are assumed to function correctly on the FHIR server being tested.",
              "$ref": "#/definitions/TestScript.Metadata"
            },
            "fixture": {
              "description": "Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Fixture"
              }
            },
            "profile": {
              "description": "Reference to the profile to be used for validation.",
              "type": "array",
              "items": {
                "$ref": "Reference.schema.json/definitions/Reference"
              }
            },
            "variable": {
              "description": "Variable is set based either on element value in response body or on header field value in the response headers.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Variable"
              }
            },
            "rule": {
              "description": "Assert rule to be used in one or more asserts within the test script.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Rule"
              }
            },
            "ruleset": {
              "description": "Contains one or more rules.  Offers a way to group rules so assertions could reference the group of rules and have them all applied.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Ruleset"
              }
            },
            "setup": {
              "description": "A series of required setup operations before tests are executed.",
              "$ref": "#/definitions/TestScript.Setup"
            },
            "test": {
              "description": "A test in this script.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Test"
              }
            },
            "teardown": {
              "description": "A series of operations required to clean up after the all the tests are executed (successfully or otherwise).",
              "$ref": "#/definitions/TestScript.Teardown"
            }
          },
          "required": [
            "resourceType"
          ]
        }
      ]
    },
    "TestScript.Contact": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "name": {
              "description": "The name of an individual to contact regarding the Test Script.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "telecom": {
              "description": "Contact details for individual (if a name was provided) or the publisher.",
              "type": "array",
              "items": {
                "$ref": "ContactPoint.schema.json/definitions/ContactPoint"
              }
            }
          }
        }
      ]
    },
    "TestScript.Origin": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "index": {
              "description": "Abstract name given to an origin server in this test script.  The name is provided as a number starting at 1.",
              "type": "number",
              "pattern": "-?([0]|([1-9][0-9]*))"
            },
            "index_": {
              "description": "Extensions for index",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "profile": {
              "description": "The type of origin profile the test system supports.",
              "$ref": "Coding.schema.json/definitions/Coding"
            }
          },
          "required": [
            "profile"
          ]
        }
      ]
    },
    "TestScript.Destination": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "index": {
              "description": "Abstract name given to a destination server in this test script.  The name is provided as a number starting at 1.",
              "type": "number",
              "pattern": "-?([0]|([1-9][0-9]*))"
            },
            "index_": {
              "description": "Extensions for index",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "profile": {
              "description": "The type of destination profile the test system supports.",
              "$ref": "Coding.schema.json/definitions/Coding"
            }
          },
          "required": [
            "profile"
          ]
        }
      ]
    },
    "TestScript.Metadata": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "link": {
              "description": "A link to the FHIR specification that this test is covering.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Link"
              }
            },
            "capability": {
              "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Capability"
              }
            }
          },
          "required": [
            "capability"
          ]
        }
      ]
    },
    "TestScript.Link": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "url": {
              "description": "URL to a particular requirement or feature within the FHIR specification.",
              "type": "string"
            },
            "url_": {
              "description": "Extensions for url",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "Short description of the link.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Capability": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "required": {
              "description": "Whether or not the test execution will require the given capabilities of the server in order for this test script to execute.",
              "type": "true | false"
            },
            "required_": {
              "description": "Extensions for required",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "validated": {
              "description": "Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute.",
              "type": "true | false"
            },
            "validated_": {
              "description": "Extensions for validated",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "Description of the capabilities that this test script is requiring the server to support.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "origin": {
              "description": "Which origin server these requirements apply to.",
              "type": "array",
              "items": {
                "type": "number",
                "pattern": "-?([0]|([1-9][0-9]*))"
              }
            },
            "origin_": {
              "description": "Extensions for origin",
              "items": {
                "$ref": "Element.schema.json/definitions/Element"
              }
            },
            "destination": {
              "description": "Which server these requirements apply to.",
              "type": "number",
              "pattern": "-?([0]|([1-9][0-9]*))"
            },
            "destination_": {
              "description": "Extensions for destination",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "link": {
              "description": "Links to the FHIR specification that describes this interaction and the resources involved in more detail.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "link_": {
              "description": "Extensions for link",
              "items": {
                "$ref": "Element.schema.json/definitions/Element"
              }
            },
            "conformance": {
              "description": "Minimum conformance required of server for test script to execute successfully.   If server does not meet at a minimum the reference conformance definition, then all tests in this script are skipped.",
              "$ref": "Reference.schema.json/definitions/Reference"
            }
          },
          "required": [
            "conformance"
          ]
        }
      ]
    },
    "TestScript.Fixture": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "autocreate": {
              "description": "Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section.",
              "type": "true | false"
            },
            "autocreate_": {
              "description": "Extensions for autocreate",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "autodelete": {
              "description": "Whether or not to implicitly delete the fixture during teardown If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section.",
              "type": "true | false"
            },
            "autodelete_": {
              "description": "Extensions for autodelete",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "resource": {
              "description": "Reference to the resource (containing the contents of the resource needed for operations).",
              "$ref": "Reference.schema.json/definitions/Reference"
            }
          }
        }
      ]
    },
    "TestScript.Variable": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "name": {
              "description": "Descriptive name for this variable.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "defaultValue": {
              "description": "A default, hard-coded, or user-defined value for this variable.",
              "type": "string"
            },
            "defaultValue_": {
              "description": "Extensions for defaultValue",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "headerField": {
              "description": "Will be used to grab the HTTP header field value from the headers that sourceId is pointing to.",
              "type": "string"
            },
            "headerField_": {
              "description": "Extensions for headerField",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "path": {
              "description": "XPath or JSONPath against the fixture body.  When variables are defined, either headerField must be specified or path, but not both.",
              "type": "string"
            },
            "path_": {
              "description": "Extensions for path",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "sourceId": {
              "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against within this variable.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "sourceId_": {
              "description": "Extensions for sourceId",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Rule": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "resource": {
              "description": "Reference to the resource (containing the contents of the rule needed for assertions).",
              "$ref": "Reference.schema.json/definitions/Reference"
            },
            "param": {
              "description": "Each rule template can take one or more parameters for rule evaluation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Param"
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      ]
    },
    "TestScript.Param": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "name": {
              "description": "Descriptive name for this parameter that matches the external assert rule parameter name.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "value": {
              "description": "The explict or dynamic value for the parameter that will be passed on to the external rule template.",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Ruleset": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "resource": {
              "description": "Reference to the resource (containing the contents of the ruleset needed for assertions).",
              "$ref": "Reference.schema.json/definitions/Reference"
            },
            "rule": {
              "description": "The referenced rule within the external ruleset template.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Rule1"
              }
            }
          },
          "required": [
            "resource",
            "rule"
          ]
        }
      ]
    },
    "TestScript.Rule1": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "ruleId": {
              "description": "Id of the referenced rule within the external ruleset template.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "ruleId_": {
              "description": "Extensions for ruleId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "param": {
              "description": "Each rule template can take one or more parameters for rule evaluation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Param1"
              }
            }
          }
        }
      ]
    },
    "TestScript.Param1": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "name": {
              "description": "Descriptive name for this parameter that matches the external assert ruleset rule parameter name.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "value": {
              "description": "The value for the parameter that will be passed on to the external ruleset rule template.",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Setup": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "metadata": {
              "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.",
              "$ref": "#/definitions/TestScript.Metadata"
            },
            "action": {
              "description": "Action would contain either an operation or an assertion.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Action"
              }
            }
          },
          "required": [
            "action"
          ]
        }
      ]
    },
    "TestScript.Action": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "operation": {
              "description": "The operation to perform.",
              "$ref": "#/definitions/TestScript.Operation"
            },
            "assert": {
              "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
              "$ref": "#/definitions/TestScript.Assert"
            }
          }
        }
      ]
    },
    "TestScript.Operation": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "type": {
              "description": "Server interaction or operation type.",
              "$ref": "Coding.schema.json/definitions/Coding"
            },
            "resource": {
              "description": "The type of the resource.  See http://hl7-fhir.github.io/resourcelist.html.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "resource_": {
              "description": "Extensions for resource",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "label": {
              "description": "The label would be used for tracking/logging purposes by test engines.",
              "type": "string"
            },
            "label_": {
              "description": "Extensions for label",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "The description would be used by test engines for tracking and reporting purposes.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "accept": {
              "description": "The content-type or mime-type to use for RESTful operation in the \u0027Accept\u0027 header.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "accept_": {
              "description": "Extensions for accept",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "contentType": {
              "description": "The content-type or mime-type to use for RESTful operation in the \u0027Content-Type\u0027 header.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "contentType_": {
              "description": "Extensions for contentType",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "destination": {
              "description": "The server where the request message is destined for.  Must be one of the server numbers listed in TestScript.destination section.",
              "type": "number",
              "pattern": "-?([0]|([1-9][0-9]*))"
            },
            "destination_": {
              "description": "Extensions for destination",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "encodeRequestUrl": {
              "description": "Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths.",
              "type": "true | false"
            },
            "encodeRequestUrl_": {
              "description": "Extensions for encodeRequestUrl",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "origin": {
              "description": "The server where the request message originates from.  Must be one of the server numbers listed in TestScript.origin section.",
              "type": "number",
              "pattern": "-?([0]|([1-9][0-9]*))"
            },
            "origin_": {
              "description": "Extensions for origin",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "params": {
              "description": "Path plus parameters after [type].  Used to set parts of the request URL explicitly.",
              "type": "string"
            },
            "params_": {
              "description": "Extensions for params",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "requestHeader": {
              "description": "Header elements would be used to set HTTP headers.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.RequestHeader"
              }
            },
            "responseId": {
              "description": "The fixture id (maybe new) to map to the response.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "responseId_": {
              "description": "Extensions for responseId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "sourceId": {
              "description": "The id of the fixture used as the body of a PUT or POST request.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "sourceId_": {
              "description": "Extensions for sourceId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "targetId": {
              "description": "Id of fixture used for extracting the [id],  [type], and [vid] for GET requests.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "targetId_": {
              "description": "Extensions for targetId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "url": {
              "description": "Complete request URL.",
              "type": "string"
            },
            "url_": {
              "description": "Extensions for url",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.RequestHeader": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "field": {
              "description": "The HTTP header field e.g. \"Accept\".",
              "type": "string"
            },
            "field_": {
              "description": "Extensions for field",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "value": {
              "description": "The value of the header e.g. \"application/xml\".",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Assert": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "label": {
              "description": "The label would be used for tracking/logging purposes by test engines.",
              "type": "string"
            },
            "label_": {
              "description": "Extensions for label",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "The description would be used by test engines for tracking and reporting purposes.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "direction": {
              "description": "The direction to use for the assertion.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "direction_": {
              "description": "Extensions for direction",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "compareToSourceId": {
              "description": "Id of fixture used to compare the \"sourceId/path\" evaluations to.",
              "type": "string"
            },
            "compareToSourceId_": {
              "description": "Extensions for compareToSourceId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "compareToSourcePath": {
              "description": "XPath or JSONPath expression against fixture used to compare the \"sourceId/path\" evaluations to.",
              "type": "string"
            },
            "compareToSourcePath_": {
              "description": "Extensions for compareToSourcePath",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "contentType": {
              "description": "The content-type or mime-type to use for RESTful operation in the \u0027Content-Type\u0027 header.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "contentType_": {
              "description": "Extensions for contentType",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "headerField": {
              "description": "The HTTP header field name e.g. \u0027Location\u0027.",
              "type": "string"
            },
            "headerField_": {
              "description": "Extensions for headerField",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "minimumId": {
              "description": "The ID of a fixture.  Asserts that the response contains at a minimum the fixture specified by minimumId.",
              "type": "string"
            },
            "minimumId_": {
              "description": "Extensions for minimumId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "navigationLinks": {
              "description": "Whether or not the test execution performs validation on the bundle navigation links.",
              "type": "true | false"
            },
            "navigationLinks_": {
              "description": "Extensions for navigationLinks",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "operator": {
              "description": "The operator type.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "operator_": {
              "description": "Extensions for operator",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "path": {
              "description": "The XPath or JSONPath expression to be evaluated against the fixture representing the response received from server.",
              "type": "string"
            },
            "path_": {
              "description": "Extensions for path",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "resource": {
              "description": "The type of the resource.  See http://hl7-fhir.github.io/resourcelist.html.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "resource_": {
              "description": "Extensions for resource",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "response": {
              "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "response_": {
              "description": "Extensions for response",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "responseCode": {
              "description": "The value of the HTTP response code to be tested.",
              "type": "string"
            },
            "responseCode_": {
              "description": "Extensions for responseCode",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "rule": {
              "description": "The TestScript.rule this assert will evaluate.",
              "$ref": "#/definitions/TestScript.Rule2"
            },
            "ruleset": {
              "description": "The TestScript.ruleset this assert will evaluate.",
              "$ref": "#/definitions/TestScript.Ruleset1"
            },
            "sourceId": {
              "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "sourceId_": {
              "description": "Extensions for sourceId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "validateProfileId": {
              "description": "The ID of the Profile to validate against.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "validateProfileId_": {
              "description": "Extensions for validateProfileId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "value": {
              "description": "The value to compare to.",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "warningOnly": {
              "description": "Whether or not the test execution will produce a warning only on error for this assert.",
              "type": "true | false"
            },
            "warningOnly_": {
              "description": "Extensions for warningOnly",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Rule2": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "ruleId": {
              "description": "The TestScript.rule id value this assert will evaluate.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "ruleId_": {
              "description": "Extensions for ruleId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "param": {
              "description": "Each rule template can take one or more parameters for rule evaluation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Param2"
              }
            }
          }
        }
      ]
    },
    "TestScript.Param2": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "name": {
              "description": "Descriptive name for this parameter that matches the external assert rule parameter name.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "value": {
              "description": "The value for the parameter that will be passed on to the external rule template.",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Ruleset1": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "rulesetId": {
              "description": "The TestScript.ruleset id value this assert will evaluate.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "rulesetId_": {
              "description": "Extensions for rulesetId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "rule": {
              "description": "The referenced rule within the external ruleset template.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Rule3"
              }
            }
          }
        }
      ]
    },
    "TestScript.Rule3": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "ruleId": {
              "description": "Id of the referenced rule within the external ruleset template.",
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}"
            },
            "ruleId_": {
              "description": "Extensions for ruleId",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "param": {
              "description": "Each rule template can take one or more parameters for rule evaluation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Param3"
              }
            }
          }
        }
      ]
    },
    "TestScript.Param3": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "name": {
              "description": "Descriptive name for this parameter that matches the external assert ruleset rule parameter name.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "value": {
              "description": "The value for the parameter that will be passed on to the external ruleset rule template.",
              "type": "string"
            },
            "value_": {
              "description": "Extensions for value",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "TestScript.Test": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "name": {
              "description": "The name of this test used for tracking/logging purposes by test engines.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "description": {
              "description": "A short description of the test used by test engines for tracking and reporting purposes.",
              "type": "string"
            },
            "description_": {
              "description": "Extensions for description",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "metadata": {
              "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.",
              "$ref": "#/definitions/TestScript.Metadata"
            },
            "action": {
              "description": "Action would contain either an operation or an assertion.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Action1"
              }
            }
          },
          "required": [
            "action"
          ]
        }
      ]
    },
    "TestScript.Action1": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "operation": {
              "description": "An operation would involve a REST request to a server.",
              "$ref": "#/definitions/TestScript.Operation"
            },
            "assert": {
              "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
              "$ref": "#/definitions/TestScript.Assert"
            }
          }
        }
      ]
    },
    "TestScript.Teardown": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "action": {
              "description": "The teardown action will only contain an operation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestScript.Action2"
              }
            }
          },
          "required": [
            "action"
          ]
        }
      ]
    },
    "TestScript.Action2": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "TestScript is a resource that specifies a suite of tests against a FHIR server implementation to determine compliance against the FHIR specification.",
          "properties": {
            "operation": {
              "description": "An operation would involve a REST request to a server.",
              "$ref": "#/definitions/TestScript.Operation"
            }
          }
        }
      ]
    }
  }
}