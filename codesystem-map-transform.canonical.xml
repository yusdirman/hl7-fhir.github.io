<?xml version="1.0" encoding="UTF-8"?><CodeSystem xmlns="http://hl7.org/fhir"><id value="map-transform"/><meta><lastUpdated value="2016-06-06T20:14:04.181+00:00"/></meta><text><status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><h2>StructureMapTransform</h2><p>How data is copied / created</p><p>This code system http://hl7.org/fhir/map-transform defines the following codes:</p><table class="codes"><tr><td><b>Code</b></td><td><b>Display</b></td><td><b>Definition</b></td></tr><tr><td>create<a name="create"> </a></td><td>create</td><td>create(type : string) - type is passed through to the application on the standard API, and must be known by it</td></tr><tr><td>copy<a name="copy"> </a></td><td>copy</td><td>copy(source)</td></tr><tr><td>truncate<a name="truncate"> </a></td><td>truncate</td><td>truncate(source, length) - source must be stringy type</td></tr><tr><td>escape<a name="escape"> </a></td><td>escape</td><td>escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped</td></tr><tr><td>cast<a name="cast"> </a></td><td>cast</td><td>cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known</td></tr><tr><td>append<a name="append"> </a></td><td>append</td><td>append(source...) - source is element or string</td></tr><tr><td>translate<a name="translate"> </a></td><td>translate</td><td>translate(source, uri_of_map) - use the translate operation</td></tr><tr><td>reference<a name="reference"> </a></td><td>reference</td><td>reference(source : object) - return a string that references the provided tree properly</td></tr><tr><td>dateOp<a name="dateOp"> </a></td><td>dateOp</td><td>something</td></tr><tr><td>uuid<a name="uuid"> </a></td><td>uuid</td><td>something</td></tr><tr><td>pointer<a name="pointer"> </a></td><td>pointer</td><td>something</td></tr><tr><td>evaluate<a name="evaluate"> </a></td><td>evaluate</td><td>something</td></tr></table></div></text><extension url="http://hl7.org/fhir/StructureDefinition/valueset-oid"><valueUri value="urn:oid:2.16.840.1.113883.4.642.1.537"/></extension><url value="http://hl7.org/fhir/map-transform"/><version value="1.4.0"/><name value="StructureMapTransform"/><status value="draft"/><experimental value="false"/><publisher value="HL7 (FHIR Project)"/><contact><telecom><system value="other"/><value value="http://hl7.org/fhir"/></telecom><telecom><system value="email"/><value value="fhir@lists.hl7.org"/></telecom></contact><date value="2016-06-06T20:14:04+00:00"/><description value="How data is copied / created"/><caseSensitive value="true"/><valueSet value="http://hl7.org/fhir/ValueSet/map-transform"/><content value="complete"/><concept><code value="create"/><display value="create"/><definition value="create(type : string) - type is passed through to the application on the standard API, and must be known by it"/></concept><concept><code value="copy"/><display value="copy"/><definition value="copy(source)"/></concept><concept><code value="truncate"/><display value="truncate"/><definition value="truncate(source, length) - source must be stringy type"/></concept><concept><code value="escape"/><display value="escape"/><definition value="escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped"/></concept><concept><code value="cast"/><display value="cast"/><definition value="cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known"/></concept><concept><code value="append"/><display value="append"/><definition value="append(source...) - source is element or string"/></concept><concept><code value="translate"/><display value="translate"/><definition value="translate(source, uri_of_map) - use the translate operation"/></concept><concept><code value="reference"/><display value="reference"/><definition value="reference(source : object) - return a string that references the provided tree properly"/></concept><concept><code value="dateOp"/><display value="dateOp"/><definition value="something"/></concept><concept><code value="uuid"/><display value="uuid"/><definition value="something"/></concept><concept><code value="pointer"/><display value="pointer"/><definition value="something"/></concept><concept><code value="evaluate"/><display value="evaluate"/><definition value="something"/></concept></CodeSystem>