{
  "resourceType": "StructureDefinition",
  "id": "sdcde-dataelement",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">to do</div>"
  },
  "url": "http://hl7.org/fhir/StructureDefinition/sdcde-dataelement",
  "name": "Structured Data Capture Data Element Exchange",
  "status": "draft",
  "publisher": "Health Level Seven International (Orders and Observations - Structured Data Capture)",
  "contact": [
    {
      "telecom": [
        {
          "system": "other",
          "value": "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
        }
      ]
    }
  ],
  "date": "2014-04-21",
  "description": "Sets expectations for data elements exchanged or maintained within data element registries according to requirements established by the structured data capture project",
  "fhirVersion": "1.4.0",
  "mapping": [
    {
      "identity": "iso11179",
      "uri": "http://metadata-standards.org/11179/",
      "name": "ISO 11179"
    }
  ],
  "kind": "resource",
  "abstract": false,
  "baseType": "DataElement",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/DataElement",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "path": "DataElement",
        "name": "SDCDE-DataElement",
        "short": "Resource data element",
        "definition": "Sets expectations for SDC conformant systems wishing to share data elements between registries.",
        "comments": "Often called a clinical template.",
        "alias": [
          "Master Observation",
          "Data Element",
          "CDE"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DataElement",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "DataElement"
          }
        ],
        "constraint": [
          {
            "key": "inv-2",
            "severity": "error",
            "human": "One and only one DataElement.code must have is-data-element-concept set to \"true\"",
            "expression": "code.extension(%ext-11179-de-is-data-element-concept).count = 1",
            "xpath": "count(f:code/f:extension[@uri='http://hl7.org/fhir/StructureDefinition/11179-de-is-data-element-concept'])=1"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "RetrieveMetadata response"
          },
          {
            "identity": "v2",
            "map": "OM1"
          },
          {
            "identity": "rim",
            "map": "Observation[classCode=OBS, moodCode=DEFN]"
          },
          {
            "identity": "iso11179",
            "map": "Data_Element"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance"
          },
          {
            "identity": "w5",
            "map": "conformance.content"
          }
        ]
      },
      {
        "path": "DataElement.id",
        "short": "Logical id of this artifact",
        "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
        "comments": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation. Bundles always have an id, though it is usually a generated UUID.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": true
      },
      {
        "path": "DataElement.meta",
        "short": "Metadata about the resource",
        "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.meta",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Meta"
          }
        ],
        "isSummary": true
      },
      {
        "path": "DataElement.implicitRules",
        "short": "A set of rules under which this content was created",
        "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
        "comments": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element as much as possible.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.implicitRules",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isModifier": true,
        "isSummary": true
      },
      {
        "path": "DataElement.language",
        "short": "Language of the resource content",
        "definition": "The base language in which the resource is written.",
        "comments": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource  Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.language",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "A human language.",
          "valueSetUri": "http://tools.ietf.org/html/bcp47"
        }
      },
      {
        "path": "DataElement.text",
        "short": "Text summary of the resource, for human interpretation",
        "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "comments": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative.",
        "alias": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.text",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Narrative"
          }
        ],
        "condition": [
          "dom-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Act.text?"
          }
        ]
      },
      {
        "path": "DataElement.contained",
        "short": "Contained, inline Resources",
        "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
        "comments": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
        "alias": [
          "inline resources",
          "anonymous resources",
          "contained resources"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.contained",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Resource"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "effectivePeriod",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-effective-period"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "start = (Administered_Item).Registration.state.effective_date\nend = (Administered_Item).Registration.state.until_date"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "documentReference",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-document-reference"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Registered_Item).document_reference"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "administrativeStatus",
        "short": "Extension",
        "definition": "An Extension",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-administrative-status"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).Registration.state.administrative_status"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "changeDescription",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-change-description"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).change_description"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "submitterOrganization",
        "short": "Extension",
        "definition": "An Extension",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-submitter-org"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Registered_Item).submission_record.organization"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "registryOrganization",
        "short": "Extension",
        "definition": "An Extension",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-registry-org"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).authority"
          }
        ]
      },
      {
        "path": "DataElement.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.url",
        "short": "Globally unique logical id for data element",
        "definition": "An absolute URL that is used to identify this data element when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this data element is (or will be) published.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.url",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./id[use=INSTANCE]"
          },
          {
            "identity": "iso11179",
            "map": "(Identified_Item).identifier  As assigned by registering authority"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.url"
          },
          {
            "identity": "w5",
            "map": "id"
          }
        ]
      },
      {
        "path": "DataElement.identifier",
        "short": "Logical id to reference this data element",
        "definition": "Formal identifier that is used to identify this data element when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "comments": "Typically, this is used for values that can go in a v3 II data type.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.identifier",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "id"
          },
          {
            "identity": "v2",
            "map": "OM1.2"
          },
          {
            "identity": "rim",
            "map": "./id[use=BUS]"
          },
          {
            "identity": "iso11179",
            "map": "(Identified_Item).identifier"
          },
          {
            "identity": "loinc",
            "map": "LOINC_NUM (the code is the identifier)"
          },
          {
            "identity": "w5",
            "map": "id"
          }
        ]
      },
      {
        "path": "DataElement.version",
        "short": "Logical id for this version of the data element",
        "definition": "The identifier that is used to identify this version of the data element when it is referenced in a StructureDefinition, Questionnaire or instance. This is an arbitrary value managed by the definition author manually.",
        "comments": "N/A.",
        "requirements": "There may be multiple resource versions of the data element that have this same identifier. The resource version id will change for technical reasons, whereas the stated version number needs to be under the author's control.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.version",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "version"
          },
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "./id[use=VER]"
          },
          {
            "identity": "iso11179",
            "map": "(Identified_Item).identifier.version"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.version"
          },
          {
            "identity": "loinc",
            "map": "N/A"
          },
          {
            "identity": "w5",
            "map": "id.version"
          }
        ]
      },
      {
        "path": "DataElement.status",
        "short": "draft | active | retired",
        "definition": "The status of the data element.",
        "requirements": "Allows filtering of data elements that are appropriate for use.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.status",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "mustSupport": true,
        "isModifier": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The lifecycle status of a Value Set or Concept Map.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/conformance-resource-status"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "MFE.1"
          },
          {
            "identity": "rim",
            "map": "./status (draft = new  active = active  retired = aborted)"
          },
          {
            "identity": "iso11179",
            "map": "(Administered_item).registration.state  new = Incomplete, Candidate, Recorded, Qualified  active = Standard, Preferred Standard, Application  retired = Retired, Superseded, Historical"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.status"
          },
          {
            "identity": "loinc",
            "map": "STATUS"
          },
          {
            "identity": "w5",
            "map": "status"
          }
        ]
      },
      {
        "path": "DataElement.experimental",
        "short": "If for testing purposes, not real usage",
        "definition": "A flag to indicate that this search data element definition is authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
        "comments": "Allows filtering of search data element definitions that are appropriate for use vs. not.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.experimental",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=SUBJ]/source[classCode=OBS,moodCode=EVN,code=\"experimental\"].value[type=BL]"
          },
          {
            "identity": "w5",
            "map": "class"
          },
          {
            "identity": "iso11179",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.publisher",
        "short": "Name of the publisher (Organization or individual)",
        "definition": "The name of the individual or organization that published the data element.",
        "comments": "Usually an organization, but may be an individual. This item SHOULD be populated unless the information is available from context.",
        "requirements": "Helps establish the \"authority/credibility\" of the data element.  May also allow for contact.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.publisher",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "registrationAuthority"
          },
          {
            "identity": "v2",
            "map": "OM1.16"
          },
          {
            "identity": "rim",
            "map": "./participation[typeCode=AUT]/role[classCode=ASSIGN]/scoper[classCode=ORG,determinerCode=INSTANCE]/name"
          },
          {
            "identity": "iso11179",
            "map": "(Administered_Item).stewardship_record.organization.name"
          },
          {
            "identity": "loinc",
            "map": "Fixed to Regenstrief or SOURCE"
          },
          {
            "identity": "w5",
            "map": "who.witness"
          }
        ]
      },
      {
        "path": "DataElement.date",
        "short": "Date for this version of the data element",
        "definition": "The date this version of the data element was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the data element  changes.",
        "comments": "This refers to the \"business\" version, the DataElement.version which changes based on business processes.  It does not refer to the date of the RESTful version which is part of the resource metadata. Additional specific dates may be added as extensions.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.date",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "dateTime"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "revisionDate"
          },
          {
            "identity": "v2",
            "map": "OM1.21"
          },
          {
            "identity": "rim",
            "map": "./participation[typeCode=AUT]/time"
          },
          {
            "identity": "iso11179",
            "map": "(Administered_item).last_change_date"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.date"
          },
          {
            "identity": "loinc",
            "map": "DATE_LAST_CHANGED"
          },
          {
            "identity": "w5",
            "map": "when.recorded"
          }
        ]
      },
      {
        "path": "DataElement.name",
        "short": "Descriptive label for this element definition",
        "definition": "The term used by humans to refer to the data element.  Should ideally be unique within the context in which the data element is expected to be used.",
        "comments": "This may be similar to the question used to prompt someone for a data element value, but the purpose is communicating about the data element, not asking the question.  (Refer to the 'question' element for the latter.).",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "displayName"
          },
          {
            "identity": "v2",
            "map": "OM1.11"
          },
          {
            "identity": "rim",
            "map": "./title"
          },
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).designation.sign  acceptability=preferred in default context"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.name"
          },
          {
            "identity": "loinc",
            "map": "LONG_COMMON_NAME"
          }
        ]
      },
      {
        "path": "DataElement.contact",
        "short": "Contact details of the publisher",
        "definition": "Contacts to assist a user in finding and communicating with the publisher.",
        "comments": "May be a web site, an email address, a telephone number (tel:), etc.",
        "min": 1,
        "max": "*",
        "base": {
          "path": "DataElement.contact",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.17"
          },
          {
            "identity": "rim",
            "map": "./participation[typeCode=AUT]/role[classCode=ASSIGN]/scoper[classCode=ORG,determinerCode=INSTANCE]"
          },
          {
            "identity": "iso11179",
            "map": "(Administered_Item).stewardship_record.organization.[email_address, phone_number, uri]"
          },
          {
            "identity": "loinc",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "(Administered_Item).stewardship_record.organization"
          }
        ]
      },
      {
        "path": "DataElement.contact.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.contact.extension",
        "name": "contactAddress",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-contact-address"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".mail_address"
          }
        ]
      },
      {
        "path": "DataElement.contact.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.contact.name",
        "short": "Name of an individual to contact",
        "definition": "The name of an individual to contact regarding the data element.",
        "comments": "If there is no named individual, the telecom is for the organization as a whole.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.contact.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./name"
          },
          {
            "identity": "iso11179",
            "map": ".name"
          }
        ]
      },
      {
        "path": "DataElement.contact.telecom",
        "short": "Contact details for individual or publisher",
        "definition": "Contact details for individual (if a name was provided) or the publisher.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.contact.telecom",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "ContactPoint"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./telecom"
          },
          {
            "identity": "iso11179",
            "map": ".email_address, .phone_number, .uri"
          }
        ]
      },
      {
        "path": "DataElement.useContext",
        "short": "Content intends to support these contexts",
        "definition": "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of data element definitions.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "DataElement.useContext",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "extensible",
          "description": "Indicates the countries, regions, disciplines and other aspects of use within which this artifact is targeted for use.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/use-context"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.18, OM1.42, OM1.46, OM7.3"
          },
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=SUBJ]/source[classCode=LIST, moodCode=EVN]/code"
          },
          {
            "identity": "iso11179",
            "map": "(Classifiable_Item).classifier"
          },
          {
            "identity": "objimpl",
            "map": "BaseConformance.useContext"
          },
          {
            "identity": "loinc",
            "map": "COMPONENT, PROPERTY, TIME_ASPCT, SYSTEM, SCALE_TYP, METHOD_TYP, CLASS, CLASSTYPE, ORDER_OBS, DOCUMENT_SECTION, HL7_ATTACHMENT_STRUCTURE"
          },
          {
            "identity": "iso11179",
            "map": "(Classifiable_Item).classifier (if classificationOrContext = classification)"
          }
        ]
      },
      {
        "path": "DataElement.useContext.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.useContext.extension",
        "name": "classificationOrContext",
        "short": "Extension",
        "definition": "An Extension",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-classification-or-context"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "path": "DataElement.useContext.coding",
        "short": "Code defined by a terminology system",
        "definition": "A reference to a code defined by a terminology system.",
        "comments": "Codes may be defined very casually in enumerations, or code lists, up to very formal definitions such as SNOMED CT - see the HL7 v3 Core Principles for more information.  Ordering of codings is undefined and SHALL NOT be used to infer meaning. Generally, at most only one of the coding values will be labelled as UserSelected = true.",
        "requirements": "Allows for translations and alternate encodings within a code system.  Also supports communication of the same instance to systems requiring different encodings.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "CodeableConcept.coding",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.1-8, C*E.10-22"
          },
          {
            "identity": "rim",
            "map": "union(., ./translation)"
          },
          {
            "identity": "orim",
            "map": "fhir:CodeableConcept.coding rdfs:subPropertyOf dt:CD.coding"
          }
        ]
      },
      {
        "path": "DataElement.useContext.text",
        "short": "Plain text representation of the concept",
        "definition": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
        "comments": "Very often the text is the same as a displayName of one of the codings.",
        "requirements": "The codes from the terminologies do not always capture the correct meaning with all the nuances of the human using them, or sometimes there is no appropriate code at all. In these cases, the text is used to capture the full meaning of the source.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "CodeableConcept.text",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.9. But note many systems use C*E.2 for this"
          },
          {
            "identity": "rim",
            "map": "./originalText[mediaType/code=\"text/plain\"]/data"
          },
          {
            "identity": "orim",
            "map": "fhir:CodeableConcept.text rdfs:subPropertyOf dt:CD.originalText"
          }
        ]
      },
      {
        "path": "DataElement.copyright",
        "short": "Use and/or publishing restrictions",
        "definition": "A copyright statement relating to the definition of the data element. Copyright statements are generally legal restrictions on the use and publishing of the details of the definition of the data element.",
        "comments": "The copyright statement does not apply to values for the data element, only to its definition.",
        "alias": [
          "License",
          "Restrictions"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.copyright",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=SUBJ]/source[classCode=CONTRACT,moodCode=EVN].text"
          },
          {
            "identity": "iso11179",
            "map": "(Identified_Item).slot.value"
          }
        ]
      },
      {
        "path": "DataElement.stringency",
        "short": "comparable | fully-specified | equivalent | convertable | scaleable | flexible",
        "definition": "Identifies how precise the data element is in its definition.",
        "requirements": "Allows determining the degree of comparability of data element instances. Less granular data elements result in data that is less comparable (or at least requires more work to compare).",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.stringency",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "fixedCode": "comparable",
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "Indicates the degree of precision of the data element definition.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/dataelement-stringency"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "./target[typeCode=SUBJ]/source[classCode=OBS, moodCode=EVN, code=\"granularity\"]/value"
          },
          {
            "identity": "iso11179",
            "map": "(Identified_Item).slot.value"
          }
        ]
      },
      {
        "path": "DataElement.mapping",
        "slicing": {
          "discriminator": [
            "uri"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "External specification mapped to",
        "definition": "Identifies a specification (other than a terminology) that the elements which make up the DataElement have some correspondence with.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.mapping",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "100;0"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping",
        "name": "ObjectClassPropertyMapping",
        "short": "External specification mapped to",
        "definition": "Identifies a specification (other than a terminology) that the elements which make up the DataElement have some correspondence with.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.mapping",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "100;0"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.mapping.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.mapping.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.mapping.identity",
        "short": "Internal id when this mapping is used",
        "definition": "An internal id that is used to identify this mapping set when specific mappings are made on a per-element basis.",
        "comments": "The specification is described once, with general comments, and then specific mappings are made that reference this declaration.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.identity",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "fixedId": "objclass-prop",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.uri",
        "short": "Identifies what this mapping refers to",
        "definition": "An absolute URI that identifies the specification that this mapping is expressed to.",
        "comments": "A formal identity for the specification being mapped to helps with identifying maps consistently.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.uri",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "fixedUri": "http://healthit.gov/sdc/objectclassproperty",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.name",
        "short": "Names what this mapping refers to",
        "definition": "A name for the specification that is being mapped to.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.comment",
        "short": "Versions, Issues, Scope limitations etc.",
        "definition": "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.comment",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping",
        "name": "OtherMapping",
        "short": "External specification mapped to",
        "definition": "Identifies a specification (other than a terminology) that the elements which make up the DataElement have some correspondence with.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "DataElement.mapping",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "inv-1",
            "severity": "error",
            "human": "Property extension can only be specified if ObjectClass extension is present",
            "expression": "(extension(%ext-11179-objectClass) | extension(%ext-11179-property).empty()",
            "xpath": "exists(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClass']) or not(exists(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-property']))"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "100;0"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.mapping.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.mapping.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.mapping.identity",
        "short": "Internal id when this mapping is used",
        "definition": "An internal id that is used to identify this mapping set when specific mappings are made on a per-element basis.",
        "comments": "The specification is described once, with general comments, and then specific mappings are made that reference this declaration.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.identity",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.uri",
        "short": "Identifies what this mapping refers to",
        "definition": "An absolute URI that identifies the specification that this mapping is expressed to.",
        "comments": "A formal identity for the specification being mapped to helps with identifying maps consistently.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.uri",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.name",
        "short": "Names what this mapping refers to",
        "definition": "A name for the specification that is being mapped to.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.mapping.comment",
        "short": "Versions, Issues, Scope limitations etc.",
        "definition": "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "DataElement.mapping.comment",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          }
        ]
      },
      {
        "path": "DataElement.element",
        "short": "Definition of element",
        "definition": "Defines the structure, type, allowed values and other constraining characteristics of the data element.",
        "comments": "For simple data types there will only be one repetition.  For complex data types, multiple repetitions will be present defining a nested structure using the \"path\" element.",
        "requirements": "1.",
        "min": 1,
        "max": "*",
        "base": {
          "path": "DataElement.element",
          "min": 1,
          "max": "*"
        },
        "type": [
          {
            "code": "ElementDefinition"
          }
        ],
        "constraint": [
          {
            "key": "dae-1",
            "severity": "error",
            "human": "No base allowed",
            "expression": "base.empty()",
            "xpath": "not(exists(f:base))"
          },
          {
            "key": "dae-2",
            "severity": "error",
            "human": "No slicing allowed",
            "expression": "slicing.empty()",
            "xpath": "not(exists(f:slicing))"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF)"
          },
          {
            "identity": "iso11179",
            "map": "(ignored nesting)"
          }
        ]
      },
      {
        "path": "DataElement.element.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "question",
        "short": "Extension",
        "definition": "An Extension",
        "comments": "null\r\nNeed at least one primary question and one alternate question.",
        "min": 2,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-question"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Registered_Item).document_reference"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "allowedUnits",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain.unit_of_measure (if a single unit)"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "minLength",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/minLength"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "regex",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/regex"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "entryFormat",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/entryFormat"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain.format"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "maxDecimalPlaces",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/maxDecimalPlaces"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.path",
        "short": "The path of the element (see the Detailed Descriptions)",
        "definition": "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.path",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "Name, Identifier & Context"
          },
          {
            "identity": "iso11179",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.representation",
        "short": "xmlAttr | xmlText | typeAttr | cdaText | xhtml",
        "definition": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
        "comments": "This is rarely used except for special cases where the representation deviates from the normal, which is done only very reluctantly, and can only be done in the base standard (and profiles must reproduce what the base standard does).",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.representation",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "How a property is represented on the wire.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/property-representation"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.name",
        "short": "Name for this particular element definition (reference target)",
        "definition": "The name of this element definition. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element.",
        "comments": "The name SHALL be unique within the structure within the context of the constrained resource element.  (Though to avoid confusion, uniqueness across all elements is recommended.).",
        "requirements": "May also be used for code generation purposes.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          },
          {
            "identity": "iso11179",
            "map": "(Identified_Item).designation"
          }
        ]
      },
      {
        "path": "DataElement.element.label",
        "short": "Name for element to display with or prompt for element",
        "definition": "The text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.",
        "comments": "Question and label serve similar purposes in they both can be used to prompt for capturing a data element.  Whether the question form or label form should be used will depend on the type of instrument being used to capture the information.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.label",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./code/display"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          },
          {
            "identity": "iso11179",
            "map": "(Identified_Item).designation"
          }
        ]
      },
      {
        "path": "DataElement.element.code",
        "short": "Defining code",
        "definition": "A code that provides the meaning for the element according to a particular terminology.",
        "comments": "The data element definition and other constraints SHALL be a proper constraint on the meaning (as defined in the code system, including relationships) of any code listed here.  Where multiple codes exist in a terminology that could correspond to the data element, the most granular code(s) should be selected, so long as they are not more restrictive than the data element itself.",
        "requirements": "Links the meaning of an element to an external terminology.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.code",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "extensible",
          "description": "Codes representing the data element concept for a data element",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sdcde-dataelement-sdccode"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.7"
          },
          {
            "identity": "rim",
            "map": "./code (root or translation)"
          },
          {
            "identity": "iso11179",
            "map": "(Data_Element).data_element_concept.identifier"
          },
          {
            "identity": "loinc",
            "map": "LOINC_NUM"
          },
          {
            "identity": "iso11179",
            "map": ".meaning (if isDataElementConcept = true)"
          }
        ]
      },
      {
        "path": "DataElement.element.code.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.code.extension",
        "name": "isDataElementConcept",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-is-data-element-concept"
            ]
          }
        ]
      },
      {
        "path": "DataElement.element.code.system",
        "short": "Identity of the terminology system",
        "definition": "The identification of the code system that defines the meaning of the symbol in the code.",
        "comments": "The URI may be an OID (urn:oid:...) or a UUID (urn:uuid:...).  OIDs and UUIDs SHALL be references to the HL7 OID registry. Otherwise, the URI should come from HL7's list of FHIR defined special URIs or it should de-reference to some definition that establish the system clearly and unambiguously.",
        "requirements": "Need to be unambiguous about the source of the definition of the symbol.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.system",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.3"
          },
          {
            "identity": "rim",
            "map": "./codeSystem"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.system rdfs:subPropertyOf dt:CDCoding.codeSystem"
          }
        ]
      },
      {
        "path": "DataElement.element.code.version",
        "short": "Version of the system - if relevant",
        "definition": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured. and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
        "comments": "Where the terminology does not clearly define what string should be used to identify code system versions, the recommendation is to use the date (expressed in FHIR date format) on which that version was officially published as the version date.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.version",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.7"
          },
          {
            "identity": "rim",
            "map": "./codeSystemVersion"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.version rdfs:subPropertyOf dt:CDCoding.codeSystemVersion"
          }
        ]
      },
      {
        "path": "DataElement.element.code.code",
        "short": "Symbol in syntax defined by the system",
        "definition": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
        "requirements": "Need to refer to a particular code in the system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.code",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.1"
          },
          {
            "identity": "rim",
            "map": "./code"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.code rdfs:subPropertyOf dt:CDCoding.code"
          }
        ]
      },
      {
        "path": "DataElement.element.code.display",
        "short": "Representation defined by the system",
        "definition": "A representation of the meaning of the code in the system, following the rules of the system.",
        "requirements": "Need to be able to carry a human-readable meaning of the code for readers that do not know  the system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.2 - but note this is not well followed"
          },
          {
            "identity": "rim",
            "map": "CV.displayName"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.display rdfs:subPropertyOf dt:CDCoding.displayName"
          }
        ]
      },
      {
        "path": "DataElement.element.code.userSelected",
        "short": "If this coding was chosen directly by the user",
        "definition": "Indicates that this coding was chosen by a user directly - i.e. off a pick list of available items (codes or displays).",
        "comments": "Amongst a set of alternatives, a directly chosen code is the most appropriate starting point for new translations. There is some ambiguity about what exactly 'directly chosen' implies, and trading partner agreement may be needed to clarify the use of this element and its consequences more completely.",
        "requirements": "This has been identified as a clinical safety criterium - that this exact system/code pair was chosen explicitly, rather than inferred by the system based on some rules or language processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.userSelected",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "Sometimes implied by being first"
          },
          {
            "identity": "rim",
            "map": "CD.codingRationale"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.userSelected fhir:mapsTo dt:CDCoding.codingRationale. fhir:Coding.userSelected fhir:hasMap fhir:Coding.userSelected.map. fhir:Coding.userSelected.map a fhir:Map;   fhir:target dt:CDCoding.codingRationale. fhir:Coding.userSelected\\#true a [     fhir:source \"true\";     fhir:target dt:CDCoding.codingRationale\\#O   ]"
          }
        ]
      },
      {
        "path": "DataElement.element.slicing",
        "short": "This element is sliced - slices follow",
        "definition": "Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).",
        "comments": "The first element in the sequence, the one that carries the slicing, is the unconstrained element, for reference purposes . This may include the unconstrained children.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.slicing",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "constraint": [
          {
            "key": "eld-1",
            "severity": "error",
            "human": "If there are no discriminators, there must be a definition",
            "expression": "discriminator.exists() or description.exists()",
            "xpath": "(f:discriminator) or (f:description)"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.slicing.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.slicing.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.slicing.discriminator",
        "short": "Element values that are used to distinguish the slices",
        "definition": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
        "comments": "If there is no discriminator, the content is hard to process, so this should be avoided. If the base element has a cardinality of ..1, and there is a choice of types, the discriminator most be \"@type\".",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.slicing.discriminator",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.slicing.description",
        "short": "Text description of how slicing works (or not)",
        "definition": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.",
        "comments": "If it's really not possible to differentiate them, the design should be re-evaluated to make the content usable.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.slicing.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.slicing.ordered",
        "short": "If elements must be in same order as slices",
        "definition": "If the matching elements have to occur in the same order as defined in the profile.",
        "comments": "Order should only be required when it is a pressing concern for presentation. Profile authors should consider making the order a feature of the rules about the narrative, not the rules about the data - requiring ordered data makes the profile much less re-usable.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.slicing.ordered",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.slicing.rules",
        "short": "closed | open | openAtEnd",
        "definition": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
        "comments": "Allowing additional elements makes for a much for flexible template - it's open for use in wider contexts, but also means that the content of the resource is not closed, and applications have to decide how to handle content not described by the profile.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.slicing.rules",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "How slices are interpreted when evaluating an instance.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/resource-slicing-rules"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.short",
        "short": "Concise definition for xml presentation",
        "definition": "A concise description of what this element means (e.g. for use in autogenerated summaries).",
        "comments": "May change the term to provide language more appropriate to the context of the profile or to reflect slicing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.short",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.definition",
        "short": "Full formal definition as narrative text",
        "definition": "Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource.",
        "comments": "It is easy for a different definition to change the meaning of an element and this can have nasty downstream consequences. Please be careful when providing definitions.",
        "requirements": "To allow a user to state the usage of an element in a particular context.",
        "alias": [
          "Description"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.definition",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "markdown"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.6, OM1.41"
          },
          {
            "identity": "rim",
            "map": "./text"
          },
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).definition.text  acceptability=preferred in default context"
          },
          {
            "identity": "loinc",
            "map": "TERM DEFINITION/DESCRIPTION(S)"
          },
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).definition.text"
          }
        ]
      },
      {
        "path": "DataElement.element.comments",
        "short": "Comments about the use of this element",
        "definition": "Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc.",
        "comments": "If it is possible to capture usage rules using constraints, that mechanism should be used in preference to this element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.comments",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "markdown"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "NTE, OM.32, OM1.33, OM1.39"
          },
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=SUBJ]/source[classCode=LIST, moodCode=EVN]/code"
          },
          {
            "identity": "iso11179",
            "map": "(Administered_Item).explanatory_comment"
          },
          {
            "identity": "loinc",
            "map": "COMMENTS"
          }
        ]
      },
      {
        "path": "DataElement.element.requirements",
        "short": "Why this resource has been created",
        "definition": "This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.",
        "comments": "This element does not describe the usage of the element (that's done in comments), rather it's for traceability of *why* the element is either needed or why the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.requirements",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "markdown"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=META]/source[classCode=ACT, moodCode=EVN, isCriterionInd=true]/reasonCode/originalText"
          },
          {
            "identity": "iso11179",
            "map": "(Registered_item).document_reference[document_type=requirements].notation"
          },
          {
            "identity": "loinc",
            "map": "R/O/C"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.alias",
        "short": "Other names",
        "definition": "Identifies additional names by which this element might also be known.",
        "requirements": "Allows for better easier recognition of the element by multiple communities, including international communities.",
        "alias": [
          "synonym",
          "other name"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.alias",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.8, OM1.52"
          },
          {
            "identity": "rim",
            "map": "Not currently expressible"
          },
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).designation.sign  acceptability!=preferred or context is other than default"
          },
          {
            "identity": "loinc",
            "map": "RELATED NAMES (only some of these apply)"
          },
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).designation"
          }
        ]
      },
      {
        "path": "DataElement.element.min",
        "short": "Minimum Cardinality",
        "definition": "The minimum number of times this element SHALL appear in the instance.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.min",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "condition": [
          "eld-2"
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Minimum  size of  data element  values?"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.max",
        "short": "Maximum Cardinality (a number or *)",
        "definition": "The maximum number of times this element is permitted to appear in the instance.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.max",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-3",
          "eld-2"
        ],
        "constraint": [
          {
            "key": "eld-3",
            "severity": "error",
            "human": "Max SHALL be a number or \"*\"",
            "expression": "empty() or ($this = '*') or (toInteger() >= 0)",
            "xpath": "@value='*' or (normalize-space(@value)!='' and normalize-space(translate(@value, '0123456789',''))='')"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "OMC.10"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Maximum  size of  data element  values?"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.base",
        "short": "Base definition information for tools",
        "definition": "Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. This information is only provided where the element definition represents a constraint on another element definition, and must be present if there is a base element definition.",
        "comments": "The base information does not carry any information that could not be determined from the path and related profiles, but making this determination requires both that the related profiles are available, and that the algorithm to determine them be available. So they are deformalised into this location for tooling convenience, and to ensure that the base information is available without dependencies.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.base.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.base.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.base.path",
        "short": "Path that identifies the base element",
        "definition": "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base.path",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.base.min",
        "short": "Min cardinality of the base element",
        "definition": "Minimum cardinality of the base element identified by the path.",
        "comments": "This is provided for consistency with max, and may affect code generation of mandatory elements of the base resource are generated differently (some reference implementations have done this).",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base.min",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.base.max",
        "short": "Max cardinality of the base element",
        "definition": "Maximum cardinality of the base element identified by the path.",
        "comments": "This is provided to code generation, since the wire representation in JSON differs depending on whether the base element has max > 1. Also, some forms of code generation may differ.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base.max",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.contentReference",
        "short": "Reference to definition of content for the element",
        "definition": "Identifies the identity of an element defined elsewhere in the profile whose content rules should be applied to the current element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.contentReference",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "condition": [
          "eld-5"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
            "valueString": "TypeRef"
          }
        ],
        "path": "DataElement.element.type",
        "short": "Data type and Profile for this element",
        "definition": "The data type or resource that the value of this element is permitted to be.",
        "comments": "The Type of the element can be left blank, in which case the type is inherited from the resource. The type can only be listed in this field if it is an allowed option in the base resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.type",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "condition": [
          "eld-13"
        ],
        "constraint": [
          {
            "key": "eld-4",
            "severity": "error",
            "human": "Aggregation may only be specified if one of the allowed types for the element is a resource",
            "expression": "aggregation.empty() or (code = 'Reference')",
            "xpath": "not(exists(f:aggregation)) or exists(f:code[@value = 'Reference'])"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "valueDomain.dataType"
          },
          {
            "identity": "v2",
            "map": "OM1.3, OMC.9"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": ".domain.data+Q14type"
          },
          {
            "identity": "loinc",
            "map": "HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)"
          },
          {
            "identity": "iso11179",
            "map": "(ignored nesting)"
          }
        ]
      },
      {
        "path": "DataElement.element.type.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.type.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.type.code",
        "short": "Name of Data type or Resource",
        "definition": "Name of Data type or Resource that is a(or the) type used for this element.",
        "comments": "If the element is a reference to another resource, this element contains \"Reference\", and the profile element refers to the profile of the allowed target of the resource, which may be a reference to the general definition of a resource (e.g. http://hl7.org/fhir/StructureDefinition/Patient). There would be one pair of type/code for each allowed target resource type.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.type.code",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "extensible",
          "description": "Either a resource or a data type, including logical model types",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/defined-types"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.3"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": ".domain.data+Q14type"
          },
          {
            "identity": "loinc",
            "map": "HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)"
          },
          {
            "identity": "iso11179",
            "map": "domain.data_type"
          }
        ]
      },
      {
        "path": "DataElement.element.type.profile",
        "short": "Profile (StructureDefinition) to apply (or IG)",
        "definition": "Identifies a profile structure or implementation Guide that SHALL hold for resources or datatypes referenced as the type of this element. Can be a local reference - to another structure in this profile, or a reference to a structure in another profile. When more than one profile is specified, the content must conform to all of them. When an implementation guide is specified, the resource SHALL conform to at least one profile defined in the implementation guide.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.type.profile",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.type.aggregation",
        "short": "contained | referenced | bundled - how aggregated",
        "definition": "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.type.aggregation",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "condition": [
          "eld-4"
        ],
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "How resource references can be aggregated.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/resource-aggregation-mode"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.type.versioning",
        "short": "either | independent | specific",
        "definition": "Whether this reference needs to be version specific or version independent, or whetehr either can be used.",
        "comments": "The base specification never makes a rule as to which form is allowed, but implementation guides may do this.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.type.versioning",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "defaultValueCode": "either",
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "Whether a reference needs to be version specific or version independent, or whetehr either can be used",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/reference-version-rules"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "DataElement.element.defaultValue[x]",
        "short": "Specified value if missing from instance",
        "definition": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
        "comments": "Default values can only be specified on a resource, data type, or extension definition, and never in a profile that applies to one of these. Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed. For these reasons, default values are (and should be) used extremely sparingly.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.defaultValue[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          },
          {
            "code": "integer"
          },
          {
            "code": "decimal"
          },
          {
            "code": "base64Binary"
          },
          {
            "code": "instant"
          },
          {
            "code": "string"
          },
          {
            "code": "uri"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "time"
          },
          {
            "code": "code"
          },
          {
            "code": "oid"
          },
          {
            "code": "id"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "markdown"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "Coding"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Count"
          },
          {
            "code": "Age"
          },
          {
            "code": "Duration"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Money"
          },
          {
            "code": "Range"
          },
          {
            "code": "Period"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Address"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Timing"
          },
          {
            "code": "Reference"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "eld-15"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.meaningWhenMissing",
        "short": "Implicit meaning when this element is missing",
        "definition": "The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing'.",
        "comments": "Implicit meanings for missing values can only be specified on a resource, data type, or extension definition, and never in a profile that applies to one of these. An implicit meaning for a missing value can never be changed, and specifying one has the consequence that constraining its use in profiles eliminates use cases as possibilities, not merely moving them out of scope.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.meaningWhenMissing",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "markdown"
          }
        ],
        "condition": [
          "eld-15"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.fixed[x]",
        "short": "Value must be exactly this",
        "definition": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
        "comments": "This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.fixed[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          },
          {
            "code": "integer"
          },
          {
            "code": "decimal"
          },
          {
            "code": "base64Binary"
          },
          {
            "code": "instant"
          },
          {
            "code": "string"
          },
          {
            "code": "uri"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "time"
          },
          {
            "code": "code"
          },
          {
            "code": "oid"
          },
          {
            "code": "id"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "markdown"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "Coding"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Count"
          },
          {
            "code": "Age"
          },
          {
            "code": "Duration"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Money"
          },
          {
            "code": "Range"
          },
          {
            "code": "Period"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Address"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Timing"
          },
          {
            "code": "Reference"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "eld-5",
          "eld-6",
          "eld-8"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "N/A (only relevant when constraining, which 11179 doesn't do)"
          }
        ]
      },
      {
        "path": "DataElement.element.pattern[x]",
        "short": "Value must have at least these property values",
        "definition": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).",
        "comments": "Mostly used for fixing values of CodeableConcept. At present, pattern[x] is not recommended as a basis for slicing while issues related to this are investigated during the DSTU period.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.pattern[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          },
          {
            "code": "integer"
          },
          {
            "code": "decimal"
          },
          {
            "code": "base64Binary"
          },
          {
            "code": "instant"
          },
          {
            "code": "string"
          },
          {
            "code": "uri"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "time"
          },
          {
            "code": "code"
          },
          {
            "code": "oid"
          },
          {
            "code": "id"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "markdown"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "Coding"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Count"
          },
          {
            "code": "Age"
          },
          {
            "code": "Duration"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Money"
          },
          {
            "code": "Range"
          },
          {
            "code": "Period"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Address"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Timing"
          },
          {
            "code": "Reference"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "eld-5",
          "eld-7",
          "eld-8"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "DataElement.element.example[x]",
        "short": "Example value (as defined for type)",
        "definition": "A sample value for this element demonstrating the type of information that would typically be captured.",
        "comments": "This will most commonly be present for data where it's not implicitly obvious from either the data type or value set what the values might be.  (I.e. Example values for dates or quantities would generally be unnecessary.)  If the example value is fully populated, the publication tool can generate an instance automatically.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.example[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          },
          {
            "code": "integer"
          },
          {
            "code": "decimal"
          },
          {
            "code": "base64Binary"
          },
          {
            "code": "instant"
          },
          {
            "code": "string"
          },
          {
            "code": "uri"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "time"
          },
          {
            "code": "code"
          },
          {
            "code": "oid"
          },
          {
            "code": "id"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "markdown"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "Coding"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Count"
          },
          {
            "code": "Age"
          },
          {
            "code": "Duration"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Money"
          },
          {
            "code": "Range"
          },
          {
            "code": "Period"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Address"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Timing"
          },
          {
            "code": "Reference"
          },
          {
            "code": "Meta"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": ".example"
          },
          {
            "identity": "loinc",
            "map": "EXMPL_ANSWERS"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.minValue[x]",
        "short": "Minimum Allowed Value (for some types)",
        "definition": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
        "comments": "Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a a [Duration](datatypes.html#duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.minValue[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          },
          {
            "code": "integer"
          },
          {
            "code": "decimal"
          },
          {
            "code": "base64Binary"
          },
          {
            "code": "instant"
          },
          {
            "code": "string"
          },
          {
            "code": "uri"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "time"
          },
          {
            "code": "code"
          },
          {
            "code": "oid"
          },
          {
            "code": "id"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "markdown"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "Coding"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Count"
          },
          {
            "code": "Age"
          },
          {
            "code": "Duration"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Money"
          },
          {
            "code": "Range"
          },
          {
            "code": "Period"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Address"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Timing"
          },
          {
            "code": "Reference"
          },
          {
            "code": "Meta"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.maxValue[x]",
        "name": "l",
        "short": "Maximum Allowed Value (for some types)",
        "definition": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
        "comments": "Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a a [Duration](datatypes.html#duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.maxValue[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          },
          {
            "code": "integer"
          },
          {
            "code": "decimal"
          },
          {
            "code": "base64Binary"
          },
          {
            "code": "instant"
          },
          {
            "code": "string"
          },
          {
            "code": "uri"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "time"
          },
          {
            "code": "code"
          },
          {
            "code": "oid"
          },
          {
            "code": "id"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "markdown"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "Coding"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Count"
          },
          {
            "code": "Age"
          },
          {
            "code": "Duration"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Money"
          },
          {
            "code": "Range"
          },
          {
            "code": "Period"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Address"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Timing"
          },
          {
            "code": "Reference"
          },
          {
            "code": "Meta"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.maxLength",
        "short": "Max length for strings",
        "definition": "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.",
        "comments": "Receivers are not required to reject instances that exceed the maximum length.  The full length could be stored.  In some cases, data might be truncated, though truncation should be undertaken with care and an understanding of the consequences of doing so. If not specified, there is no conformance expectation for length support.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.maxLength",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "OMC.12"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": ".domain.maximum_character_quantity"
          },
          {
            "identity": "iso11179",
            "map": "domain.maximum_character_quantity"
          }
        ]
      },
      {
        "path": "DataElement.element.condition",
        "short": "Reference to invariant about presence",
        "definition": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.condition",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint",
        "short": "Condition that must evaluate to true",
        "definition": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
        "comments": "Constraints should be declared on the \"context\" element - the lowest element in the hierarchy that is common to all nodes referenced by the constraint.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.constraint",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "??"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.key",
        "short": "Target of 'condition' reference above",
        "definition": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.key",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "condition": [
          "eld-14"
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.requirements",
        "short": "Why this constraint is necessary or appropriate",
        "definition": "Description of why this constraint is necessary or appropriate.",
        "comments": "To be used if the reason for the constraint may not be intuitive to all implementers.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.requirements",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.severity",
        "short": "error | warning",
        "definition": "Identifies the impact constraint violation has on the conformance of the instance.",
        "comments": "This allows constraints to be asserted as \"shall\" (error) and \"should\" (warning).",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.severity",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "SHALL applications comply with this constraint?",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/constraint-severity"
          }
        },
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.human",
        "short": "Human description of constraint",
        "definition": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated.",
        "comments": "Should be expressed in business terms as much as possible.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.human",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.expression",
        "short": "FluentPath expression of constraint",
        "definition": "A [FluentPath](fluentpath.html) expression of constraint that can be executed to see if this constraint is met.",
        "requirements": "Used by validation tooling tests of the validity of the resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.expression",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true
      },
      {
        "path": "DataElement.element.constraint.xpath",
        "short": "XPath expression of constraint",
        "definition": "An XPath expression of constraint that can be executed to see if this constraint is met.",
        "comments": "Elements SHALL use \"f\" as the namespace prefix for the FHIR namespace, and \"x\" for the xhtml namespace, and SHALL NOT use any other prefixes.",
        "requirements": "Used in Schematron tests of the validity of the resource.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.xpath",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.mustSupport",
        "short": "If the element must supported",
        "definition": "If true, implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way.  If false, the element may be ignored and not supported.",
        "comments": "\"Something useful\" is context dependent and impossible to describe in the base FHIR specification. For this reason, tue mustSupport flag is never set to true by the FHIR specification itself - it is only set to true in profiles. \n\nThis is done in [Resource Profiles](profiling.html#mustsupport), where the profile labels an element as mustSupport=true. When a profile does this, it SHALL also make clear exactly what kind of \"support\" is required, as this can mean many things.\n\nNote that an element that has the property IsModifier is not necessarily a \"key\" element (e.g. one of the important elements to make use of the resource), nor is it automatically mustSupport - however both of these things are more likely to be true for IsModifier elements than for other elements.",
        "requirements": "Allows a profile to set expectations for system capabilities beyond merely respecting cardinality constraints.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.mustSupport",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "??"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.isModifier",
        "short": "If this modifies the meaning of other elements",
        "definition": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.",
        "comments": "Only the definition of an element can set IsModifier true - either the specification itself or where an extension is originally defined. Once set, it cannot be changed in derived profiles. An element/extension that has isModifier=true SHOULD also have a minimum cardinality of 1, so that there is no lack of clarity about what to do if it is missing. If it can be missing, the definition SHALL make the meaning of a missing element clear.",
        "requirements": "Allows elements to be introduced into a specification that can't safely be ignored by applications that don't recognize them.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.isModifier",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "??"
          }
        ]
      },
      {
        "path": "DataElement.element.isSummary",
        "short": "Include when _summary = true?",
        "definition": "Whether the element should be included if a client requests a search with the parameter _summary=true.",
        "comments": "Some resources include a set of simple metadata, and some very large data. This element is used to reduce the quantity of data returned in searches. Note that servers may pre-cache summarized resources for optimal performance, so servers may not support per-profile use of the isSummary flag.",
        "requirements": "Allow clients to search through large resources quickly.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.isSummary",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false,
        "isSummary": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "??"
          }
        ]
      },
      {
        "path": "DataElement.element.binding",
        "short": "ValueSet details if this is coded",
        "definition": "Binds to a value set if this element is coded (code, Coding, CodeableConcept).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "condition": [
          "eld-11"
        ],
        "constraint": [
          {
            "key": "eld-10",
            "severity": "error",
            "human": "provide either a reference or a description (or both)",
            "expression": "valueSet.exists() or description.exists()",
            "xpath": "(exists(f:valueSetUri) or exists(f:valueSetReference)) or exists(f:description)"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "OM3, OMC.11"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": ".domain"
          },
          {
            "identity": "loinc",
            "map": "ANSWER LIST, NORMATIVE ANSWER LIST"
          },
          {
            "identity": "iso11179",
            "map": "(ignored nesting)"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.strength",
        "short": "required | extensible | preferred | example",
        "definition": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
        "comments": "For further discussion, see [[[Using Terminologies]]].",
        "alias": [
          "conformance",
          "extensibility"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding.strength",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "Indication of the degree of conformance expectations associated with a binding.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/binding-strength"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loinc",
            "map": "N/A"
          },
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.description",
        "short": "Human explanation of the value set",
        "definition": "Describes the intended use of this particular set of codes.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-10"
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": ".domain.description"
          },
          {
            "identity": "iso11179",
            "map": ".domain(Described_Value_Domain).description"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference",
        "short": "Source of value set",
        "definition": "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.",
        "comments": "For value sets with a referenceResource, the display can contain the value set description.  The reference may be version-specific or not.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding.valueSet[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sdcde-valueset"
            ]
          }
        ],
        "condition": [
          "eld-10",
          "eld-12"
        ],
        "constraint": [
          {
            "key": "eld-12",
            "severity": "error",
            "human": "URI SHALL start with http:// or https:// urn:",
            "expression": "startsWith('http:') or startsWith('https') or startsWith('urn:')",
            "xpath": "starts-with(string(@value), 'http:') or starts-with(string(@value), 'https:') or starts-with(string(@value), 'urn:')"
          },
          {
            "key": "inv-3",
            "severity": "error",
            "human": "Must have data element permitted value concept map extension if and only if data element permitted value valueset extension is present",
            "expression": "extension(%ext-11179-permitted-value-valueset).count() = extension(%ext-11179-permitted-value-conceptmap).count()",
            "xpath": "count(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-permitted-value-valueset'])=count(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-permitted-value-conceptmap'])"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "valueDomain.valueSet"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "points to explicit list or expression that evaluates to list of (Enumerated_Value_Domain).member"
          },
          {
            "identity": "loinc",
            "map": "CODE_TABLE"
          },
          {
            "identity": "iso11179",
            "map": ".domain(Described_Value_Domain).description"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.extension",
        "name": "permittedValueValueset",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-valueset"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".meaning.domain(EnumeratedConceptualDomain)"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.extension",
        "name": "permittedValueConcepmap",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-conceptmap"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain(Enumerated_ValueDomain)"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.reference",
        "short": "Relative, internal or absolute URL reference",
        "definition": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
        "comments": "Using absolute URLs provides a stable scalable approach suitable for a cloud/web context, while using relative/logical references provides a flexible approach suitable for use when trading across closed eco-system boundaries.   Absolute URLs do not need to point to a FHIR RESTful server, though this is the preferred approach. If the URL conforms to the structure \"/[type]/[id]\" then it should be assumed that the reference is to a FHIR RESTful server.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Reference.reference",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "ref-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.display",
        "short": "Text alternative for the resource",
        "definition": "Plain text narrative that identifies the resource in addition to the resource reference.",
        "comments": "This is generally not the same as the Resource.text of the referenced resource.  The purpose is to identify what's being referenced, not to fully describe it.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Reference.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping",
        "slicing": {
          "discriminator": [
            "identity"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Map element to another set of definitions",
        "definition": "Identifies a concept from an external specification that roughly corresponds to this element.",
        "comments": "Mappings are not necessarily specific enough for safe translation.",
        "requirements": "Provides guidance to implementers familiar with or converting content from other specifications.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "mappingSpecification"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Registered_item).document_reference[document_type=mapping]  Also, .meaning linkage to Data_Element_Concept is done as a mapping to a reference model.  (Data_Element_Concepts are all defined in some sort of reference model, be that Object_Class and Property or some other mechanism)"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping",
        "name": "ClassPropertyMapping",
        "short": "Map element to another set of definitions",
        "definition": "A mapping that defines the data element in terms of the SDC project's ObjectClass and Property value sets.",
        "comments": "Mappings are not necessarily specific enough for safe translation.",
        "requirements": "Provides guidance to implementers familiar with or converting content from other specifications.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "mappingSpecification"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Registered_item).document_reference[document_type=mapping]  Also, .meaning linkage to Data_Element_Concept is done as a mapping to a reference model.  (Data_Element_Concepts are all defined in some sort of reference model, be that Object_Class and Property or some other mechanism)"
          },
          {
            "identity": "iso11179",
            "map": "provides meaning/representation link between Permissible_Values and Value_Meanings"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension",
        "name": "objectClass",
        "short": "Extension",
        "definition": "An Extension",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-objectClass"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".meaning.object_class"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.extension",
        "name": "extension",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "0",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comments": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition should be version specific.  This will ideally be the URI for the Resource Profile defining the extension, with the code for the extension after a #.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "fixedUri": "http://hl7.org/fhir/StructureDefinition/11179-objectClass",
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.valueCoding",
        "short": "Value of extension",
        "definition": "Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "Codes representing the ISO 11179 Object Class for a data element",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sdcde-dataelement-sdccode"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension",
        "name": "property",
        "short": "Extension",
        "definition": "An Extension",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".meaning.property"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.extension",
        "name": "extension",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "0",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comments": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition should be version specific.  This will ideally be the URI for the Resource Profile defining the extension, with the code for the extension after a #.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "fixedUri": "http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty",
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.valueCoding",
        "short": "Value of extension",
        "definition": "Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "Codes representing the ISO 11179 Object Class Property for a data element",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sdcde-dataelement-sdccode"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.identity",
        "short": "Reference to mapping declaration",
        "definition": "An internal reference to the definition of a mapping.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.identity",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "fixedId": "objclass-prop",
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.language",
        "short": "Computable language of mapping",
        "definition": "Identifies the computable language in which mapping.map is expressed.",
        "comments": "If omitted, then there can be no expectation of computational interpretation of the mapping.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.language",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The mime type of an attachment. Any valid mime type is allowed.",
          "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.map",
        "short": "Details of the mapping",
        "definition": "This should be expressed as \"[uri for object class code system]#[code for object class code system] | [uri for property code system]#[code for property code system]\".",
        "comments": "We express the mapping even though the class and property extensions already convey the data to ensure that systems that don't recognize the extensions still understand the mappings.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.map",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "ObjectClass, Property (this is one possible data model that can be mapped to - the uri would identify the data model  mappingSpecification.mappingScript"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping",
        "name": "OtherElementMapping",
        "short": "Map element to another set of definitions",
        "definition": "Identifies a concept from an external specification that roughly corresponds to this element.",
        "comments": "Mappings are not necessarily specific enough for safe translation.",
        "requirements": "Provides guidance to implementers familiar with or converting content from other specifications.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.mapping",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "dex",
            "map": "mappingSpecification"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "Registered_item).document_reference[document_type=mapping]  Also, .meaning linkage to Data_Element_Concept is done as a mapping to a reference model.  (Data_Element_Concepts are all defined in some sort of reference model, be that Object_Class and Property or some other mechanism)"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension",
        "name": "MappingEquivalence",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-equivalence"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "path": "DataElement.element.mapping.identity",
        "short": "Reference to mapping declaration",
        "definition": "An internal reference to the definition of a mapping.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.identity",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.language",
        "short": "Computable language of mapping",
        "definition": "Identifies the computable language in which mapping.map is expressed.",
        "comments": "The most common languages will be application/sparql-results+xml, application/sql and application/xquery.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.language",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The mime type of an attachment. Any valid mime type is allowed.",
          "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.map",
        "short": "Details of the mapping",
        "definition": "Expresses what part of the target specification corresponds to this element.",
        "comments": "For most mappings, the syntax is undefined.  Syntax will be provided for mappings to the RIM.  Multiple mappings may be possible and may include constraints on other resource elements that identify when a particular mapping applies.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.map",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "iso11179",
            "map": "ObjectClass, Property (this is one possible data model that can be mapped to - the uri would identify the data model  mappingSpecification.mappingScript"
          }
        ]
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "DataElement",
        "name": "SDCDE-DataElement",
        "definition": "Sets expectations for SDC conformant systems wishing to share data elements between registries.",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "DataElement"
          }
        ],
        "constraint": [
          {
            "key": "inv-2",
            "severity": "error",
            "human": "One and only one DataElement.code must have is-data-element-concept set to \"true\"",
            "expression": "code.extension(%ext-11179-de-is-data-element-concept).count = 1",
            "xpath": "count(f:code/f:extension[@uri='http://hl7.org/fhir/StructureDefinition/11179-de-is-data-element-concept'])=1"
          }
        ],
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Data_Element"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "effectivePeriod",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-effective-period"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "start = (Administered_Item).Registration.state.effective_date\nend = (Administered_Item).Registration.state.until_date"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "documentReference",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-document-reference"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Registered_Item).document_reference"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "administrativeStatus",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-administrative-status"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).Registration.state.administrative_status"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "changeDescription",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-change-description"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).change_description"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "submitterOrganization",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-submitter-org"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Registered_Item).submission_record.organization"
          }
        ]
      },
      {
        "path": "DataElement.extension",
        "name": "registryOrganization",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-registry-org"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).authority"
          }
        ]
      },
      {
        "path": "DataElement.url",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Identified_Item).identifier  As assigned by registering authority"
          }
        ]
      },
      {
        "path": "DataElement.identifier",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Identified_Item).identifier"
          }
        ]
      },
      {
        "path": "DataElement.version",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Identified_Item).identifier.version"
          }
        ]
      },
      {
        "path": "DataElement.status",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_item).registration.state  new = Incomplete, Candidate, Recorded, Qualified  active = Standard, Preferred Standard, Application  retired = Retired, Superseded, Historical"
          }
        ]
      },
      {
        "path": "DataElement.experimental",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.publisher",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).stewardship_record.organization.name"
          }
        ]
      },
      {
        "path": "DataElement.date",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_item).last_change_date"
          }
        ]
      },
      {
        "path": "DataElement.name",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).designation.sign  acceptability=preferred in default context"
          }
        ]
      },
      {
        "path": "DataElement.contact",
        "min": 1,
        "max": "*",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Administered_Item).stewardship_record.organization"
          }
        ]
      },
      {
        "path": "DataElement.contact.extension",
        "name": "contactAddress",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-contact-address"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".mail_address"
          }
        ]
      },
      {
        "path": "DataElement.contact.name",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".name"
          }
        ]
      },
      {
        "path": "DataElement.contact.telecom",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".email_address, .phone_number, .uri"
          }
        ]
      },
      {
        "path": "DataElement.useContext",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Classifiable_Item).classifier (if classificationOrContext = classification)"
          }
        ]
      },
      {
        "path": "DataElement.useContext.extension",
        "name": "classificationOrContext",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-classification-or-context"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "path": "DataElement.copyright",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Identified_Item).slot.value"
          }
        ]
      },
      {
        "path": "DataElement.stringency",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "fixedCode": "comparable",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Identified_Item).slot.value"
          }
        ]
      },
      {
        "path": "DataElement.mapping",
        "slicing": {
          "discriminator": [
            "uri"
          ],
          "ordered": false,
          "rules": "open"
        },
        "max": "1"
      },
      {
        "path": "DataElement.mapping",
        "name": "ObjectClassPropertyMapping",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.identity",
        "type": [
          {
            "code": "id"
          }
        ],
        "fixedId": "objclass-prop",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.uri",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "uri"
          }
        ],
        "fixedUri": "http://healthit.gov/sdc/objectclassproperty",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.name",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.comment",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping",
        "name": "OtherMapping",
        "constraint": [
          {
            "key": "inv-1",
            "severity": "error",
            "human": "Property extension can only be specified if ObjectClass extension is present",
            "expression": "(extension(%ext-11179-objectClass) | extension(%ext-11179-property).empty()",
            "xpath": "exists(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClass']) or not(exists(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-property']))"
          }
        ],
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.identity",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.uri",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.name",
        "mustSupport": true
      },
      {
        "path": "DataElement.mapping.comment",
        "mustSupport": true
      },
      {
        "path": "DataElement.element",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(ignored nesting)"
          }
        ]
      },
      {
        "path": "DataElement.element.comment",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "question",
        "comments": "...Need at least one primary question and one alternate question.",
        "min": 2,
        "max": "*",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-question"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Registered_Item).document_reference"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "allowedUnits",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain.unit_of_measure (if a single unit)"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "minLength",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/minLength"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "regex",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/regex"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "entryFormat",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/entryFormat"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain.format"
          }
        ]
      },
      {
        "path": "DataElement.element.extension",
        "name": "maxDecimalPlaces",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/maxDecimalPlaces"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.path",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "DataElement.element.name",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Identified_Item).designation"
          }
        ]
      },
      {
        "path": "DataElement.element.label",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Identified_Item).designation"
          }
        ]
      },
      {
        "path": "DataElement.element.code",
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "Codes representing the data element concept for a data element",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sdcde-dataelement-sdccode"
          }
        },
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".meaning (if isDataElementConcept = true)"
          }
        ]
      },
      {
        "path": "DataElement.element.code.extension",
        "name": "isDataElementConcept",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-de-is-data-element-concept"
            ]
          }
        ],
        "condition": [
          "inv-2"
        ]
      },
      {
        "path": "DataElement.element.definition",
        "min": 1,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).definition.text"
          }
        ]
      },
      {
        "path": "DataElement.element.requirements",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.alias",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(Designatable_Item).designation"
          }
        ]
      },
      {
        "path": "DataElement.element.min",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.max",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.type",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(ignored nesting)"
          }
        ]
      },
      {
        "path": "DataElement.element.type.code",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "domain.data_type"
          }
        ]
      },
      {
        "path": "DataElement.element.defaultValue[x]",
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.meaningWhenMissing",
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.example[x]",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.minValue[x]",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.maxValue[x]",
        "name": "l",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.maxLength",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "domain.maximum_character_quantity"
          }
        ]
      },
      {
        "path": "DataElement.element.condition",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.key",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.requirements",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.severity",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.human",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.constraint.xpath",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.mustSupport",
        "min": 0,
        "max": "0",
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.binding",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "(ignored nesting)"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.strength",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "Could be a slot"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.description",
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain(Described_Value_Domain).description"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/sdcde-valueset"
            ]
          }
        ],
        "constraint": [
          {
            "key": "inv-3",
            "severity": "error",
            "human": "Must have data element permitted value concept map extension if and only if data element permitted value valueset extension is present",
            "expression": "extension(%ext-11179-permitted-value-valueset).count() = extension(%ext-11179-permitted-value-conceptmap).count()",
            "xpath": "count(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-permitted-value-valueset'])=count(f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-permitted-value-conceptmap'])"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain(Described_Value_Domain).description"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.extension",
        "name": "permittedValueValueset",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-valueset"
            ]
          }
        ],
        "condition": [
          "inv-3"
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".meaning.domain(EnumeratedConceptualDomain)"
          }
        ]
      },
      {
        "path": "DataElement.element.binding.valueSetReference.extension",
        "name": "permittedValueConcepmap",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-conceptmap"
            ]
          }
        ],
        "condition": [
          "inv-3"
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".domain(Enumerated_ValueDomain)"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping",
        "slicing": {
          "discriminator": [
            "identity"
          ],
          "ordered": false,
          "rules": "open"
        },
        "max": "1"
      },
      {
        "path": "DataElement.element.mapping",
        "name": "ClassPropertyMapping",
        "definition": "A mapping that defines the data element in terms of the SDC project's ObjectClass and Property value sets.",
        "min": 0,
        "max": "1",
        "condition": [
          "inv-2"
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": "provides meaning/representation link between Permissible_Values and Value_Meanings"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension",
        "name": "objectClass",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-objectClass"
            ]
          }
        ],
        "condition": [
          "inv-1"
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".meaning.object_class"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.valueCoding",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "Codes representing the ISO 11179 Object Class for a data element",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sdcde-dataelement-sdccode"
          }
        }
      },
      {
        "path": "DataElement.element.mapping.extension",
        "name": "property",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty"
            ]
          }
        ],
        "condition": [
          "inv-1"
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "iso11179",
            "map": ".meaning.property"
          }
        ]
      },
      {
        "path": "DataElement.element.mapping.extension.valueCoding",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "Codes representing the ISO 11179 Object Class Property for a data element",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/sdcde-dataelement-sdccode"
          }
        }
      },
      {
        "path": "DataElement.element.mapping.identity",
        "type": [
          {
            "code": "id"
          }
        ],
        "fixedId": "objclass-prop",
        "mustSupport": true
      },
      {
        "path": "DataElement.element.mapping.map",
        "definition": "This should be expressed as \"[uri for object class code system]#[code for object class code system] | [uri for property code system]#[code for property code system]\".",
        "comments": "We express the mapping even though the class and property extensions already convey the data to ensure that systems that don't recognize the extensions still understand the mappings.",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "DataElement.element.mapping",
        "name": "OtherElementMapping",
        "min": 0,
        "max": "*",
        "condition": [
          "inv-2"
        ],
        "mustSupport": true
      },
      {
        "path": "DataElement.element.mapping.extension",
        "name": "MappingEquivalence",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-equivalence"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "path": "DataElement.element.mapping.identity",
        "type": [
          {
            "code": "id"
          }
        ],
        "mustSupport": true
      },
      {
        "path": "DataElement.element.mapping.language",
        "comments": "The most common languages will be application/sparql-results+xml, application/sql and application/xquery.",
        "mustSupport": true
      },
      {
        "path": "DataElement.element.mapping.map",
        "mustSupport": true
      }
    ]
  }
}