{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://hl7.org/fhir/json-schema/ModuleDefinition",
  "$ref": "#/definitions/ModuleDefinition",
  "description": "see http://hl7.org/fhir/json.html#schema for information about the FHIR Json Schemas",
  "definitions": {
    "ModuleDefinition": {
      "allOf": [
        {
          "$ref": "DomainResource.schema.json/definitions/DomainResource"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "resourceType": {
              "description": "This is a ModuleDefinition resource",
              "type": "string",
              "enum": [
                "ModuleDefinition"
              ]
            },
            "identifier": {
              "description": "A logical identifier for the module such as the CMS or NQF identifiers for a measure artifact.",
              "type": "array",
              "items": {
                "$ref": "Identifier.schema.json/definitions/Identifier"
              }
            },
            "version": {
              "description": "The version of the module, if any. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge modules, refer to the Decision Support Service specification.",
              "type": "string"
            },
            "version_": {
              "description": "Extensions for version",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "model": {
              "description": "A model reference used by the content.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.Model"
              }
            },
            "library": {
              "description": "A library referenced by the module. The reference must consist of either an id, or a document reference.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.Library"
              }
            },
            "codeSystem": {
              "description": "A code system definition used within the knowledge module.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.CodeSystem"
              }
            },
            "valueSet": {
              "description": "A value set definition used by the knowledge module.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.ValueSet"
              }
            },
            "parameter": {
              "description": "Parameters to the module.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.Parameter"
              }
            },
            "data": {
              "description": "Describes a required data item for evaluation in terms of the type of data, and optional code- or date-based filters of the data.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.Data"
              }
            }
          },
          "required": [
            "resourceType"
          ]
        }
      ]
    },
    "ModuleDefinition.Model": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "name": {
              "description": "The name of the model.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "identifier": {
              "description": "The identifier of the model.",
              "type": "string"
            },
            "identifier_": {
              "description": "Extensions for identifier",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "version": {
              "description": "The version of the model.",
              "type": "string"
            },
            "version_": {
              "description": "Extensions for version",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "ModuleDefinition.Library": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "name": {
              "description": "The local name for the library reference. If no local name is provided, the name of the referenced library is assumed.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "identifier": {
              "description": "The identifier of the library.",
              "type": "string"
            },
            "identifier_": {
              "description": "Extensions for identifier",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "version": {
              "description": "The version of the library.",
              "type": "string"
            },
            "version_": {
              "description": "Extensions for version",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "documentAttachment": {
              "description": "A reference to the library.",
              "$ref": "Attachment.schema.json/definitions/Attachment"
            },
            "documentReference": {
              "description": "A reference to the library.",
              "$ref": "Reference.schema.json/definitions/Reference"
            }
          }
        }
      ]
    },
    "ModuleDefinition.CodeSystem": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "name": {
              "description": "The local name for the code system.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "identifier": {
              "description": "The code system uri.",
              "type": "string"
            },
            "identifier_": {
              "description": "Extensions for identifier",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "version": {
              "description": "The code system version, if any.",
              "type": "string"
            },
            "version_": {
              "description": "Extensions for version",
              "$ref": "Element.schema.json/definitions/Element"
            }
          }
        }
      ]
    },
    "ModuleDefinition.ValueSet": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "name": {
              "description": "The local name for the value set.",
              "type": "string"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "identifier": {
              "description": "The value set uri.",
              "type": "string"
            },
            "identifier_": {
              "description": "Extensions for identifier",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "version": {
              "description": "The version of the value set, if any.",
              "type": "string"
            },
            "version_": {
              "description": "Extensions for version",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "codeSystem": {
              "description": "The code systems in use within the value set. These must refer to previously defined code systems within this knowledge module or a referenced library.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "codeSystem_": {
              "description": "Extensions for codeSystem",
              "items": {
                "$ref": "Element.schema.json/definitions/Element"
              }
            }
          }
        }
      ]
    },
    "ModuleDefinition.Parameter": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "name": {
              "description": "The name of the parameter.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "name_": {
              "description": "Extensions for name",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "use": {
              "description": "Whether the parameter is input or output for the module.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "use_": {
              "description": "Extensions for use",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "documentation": {
              "description": "A brief description of the parameter.",
              "type": "string"
            },
            "documentation_": {
              "description": "Extensions for documentation",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "type": {
              "description": "The type of the parameter.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "type_": {
              "description": "Extensions for type",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "profile": {
              "description": "The profile of the parameter, if any.",
              "$ref": "Reference.schema.json/definitions/Reference"
            }
          }
        }
      ]
    },
    "ModuleDefinition.Data": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "type": {
              "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.",
              "type": "string",
              "pattern": "[^\\s]+([\\s]?[^\\s]+)*"
            },
            "type_": {
              "description": "Extensions for type",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "profile": {
              "description": "The profile of the required data, specified as the uri of the profile definition.",
              "$ref": "Reference.schema.json/definitions/Reference"
            },
            "mustSupport": {
              "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mustSupport_": {
              "description": "Extensions for mustSupport",
              "items": {
                "$ref": "Element.schema.json/definitions/Element"
              }
            },
            "codeFilter": {
              "description": "Code filters for the required data, if any.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.CodeFilter"
              }
            },
            "dateFilter": {
              "description": "Date filters for the required data, if any.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleDefinition.DateFilter"
              }
            }
          }
        }
      ]
    },
    "ModuleDefinition.CodeFilter": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "path": {
              "description": "The code-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.",
              "type": "string"
            },
            "path_": {
              "description": "Extensions for path",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueSetString": {
              "description": "The valueset for the code filter. The valueSet or codeableConcept elements are exclusive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.",
              "type": "string"
            },
            "valueSetString_": {
              "description": "Extensions for valueSetString",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueSetReference": {
              "description": "The valueset for the code filter. The valueSet or codeableConcept elements are exclusive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.",
              "$ref": "Reference.schema.json/definitions/Reference"
            },
            "codeableConcept": {
              "description": "The codeable concept for the code filter. Only one of valueSet or codeableConcept may be specified. If codeableConcepts are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codeable concepts.",
              "type": "array",
              "items": {
                "$ref": "CodeableConcept.schema.json/definitions/CodeableConcept"
              }
            }
          }
        }
      ]
    },
    "ModuleDefinition.DateFilter": {
      "allOf": [
        {
          "$ref": "BackboneElement.schema.json/definitions/BackboneElement"
        },
        {
          "description": "The ModuleDefinition resource defines the data requirements for a quality artifact.",
          "properties": {
            "path": {
              "description": "The date-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type dateTime, Period, Schedule, or Timing.",
              "type": "string"
            },
            "path_": {
              "description": "Extensions for path",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valueDateTime": {
              "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime.",
              "pattern": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
              "type": "string"
            },
            "valueDateTime_": {
              "description": "Extensions for valueDateTime",
              "$ref": "Element.schema.json/definitions/Element"
            },
            "valuePeriod": {
              "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime.",
              "$ref": "Period.schema.json/definitions/Period"
            }
          }
        }
      ]
    }
  }
}